{
	// Place your Sustenet workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"struct action": {
		"scope": "zig",
		"prefix": "struct action",
		"body": [
			"const action = struct {",
			"\taction: Action(void) = .{ .compute = compute },",
			"\tfield: *Pointer,",
			"\tfn compute(action: *Action(void)) void {",
			"\t\tconst this: *@This() = @alignCast(@fieldParentPtr(\"action\", action));",
			"\t\tStruct.func(this.field.*.some_field_on_struct);",
			"\t}",
			"};",
			"var callable = action{ .field = self };",
			"try self.collection.append(&callable.action);"
		],
		"description": "Creates an Action struct."
	},
	"struct actiont1": {
		"scope": "zig",
		"prefix": "struct actiont1",
		"body": [
			"const action = struct {",
			"\taction: ActionT1($1, void) = .{ .compute = compute },",
			"\tfield: *Pointer,",
			"\tfn compute(action: *ActionT1($1, void), arg1: $1) void {",
			"\t\tconst this: *@This() = @alignCast(@fieldParentPtr(\"action\", action));",
			"\t\tStruct.func(this.field.*.some_field_on_struct, arg1);",
			"\t}",
			"};",
			"var callable = action{ .field = self };",
			"try self.collection.append(&callable.action);"
		],
		"description": "Creates an Action struct."
	},
	"struct actiont2": {
		"scope": "zig",
		"prefix": "struct actiont2",
		"body": [
			"const action = struct {",
			"\taction: ActionT2($1, $2, void) = .{ .compute = compute },",
			"\tfield: *Pointer,",
			"\tfn compute(action: *ActionT2($1, $2, void), arg1: $1, arg2: $2) void {",
			"\t\tconst this: *@This() = @alignCast(@fieldParentPtr(\"action\", action));",
			"\t\tStruct.func(this.field.*.some_field_on_struct, arg1, arg2);",
			"\t}",
			"};",
			"var callable = action{ .field = self };",
			"try self.collection.append(&callable.action);"
		],
		"description": "Creates an Action struct."
	}
}
