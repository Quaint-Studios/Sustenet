### YamlMime:ManagedReference
items:
- uid: NDesk.Options.OptionSet
  commentId: T:NDesk.Options.OptionSet
  id: OptionSet
  parent: NDesk.Options
  children:
  - NDesk.Options.OptionSet.#ctor
  - NDesk.Options.OptionSet.#ctor(System.Converter{System.String,System.String})
  - NDesk.Options.OptionSet.Add(NDesk.Options.Option)
  - NDesk.Options.OptionSet.Add(System.String,NDesk.Options.OptionAction{System.String,System.String})
  - NDesk.Options.OptionSet.Add(System.String,System.Action{System.String})
  - NDesk.Options.OptionSet.Add(System.String,System.String,NDesk.Options.OptionAction{System.String,System.String})
  - NDesk.Options.OptionSet.Add(System.String,System.String,System.Action{System.String})
  - NDesk.Options.OptionSet.Add``1(System.String,System.Action{``0})
  - NDesk.Options.OptionSet.Add``1(System.String,System.String,System.Action{``0})
  - NDesk.Options.OptionSet.Add``2(System.String,NDesk.Options.OptionAction{``0,``1})
  - NDesk.Options.OptionSet.Add``2(System.String,System.String,NDesk.Options.OptionAction{``0,``1})
  - NDesk.Options.OptionSet.CreateOptionContext
  - NDesk.Options.OptionSet.GetKeyForItem(NDesk.Options.Option)
  - NDesk.Options.OptionSet.GetOptionForName(System.String)
  - NDesk.Options.OptionSet.GetOptionParts(System.String,System.String@,System.String@,System.String@,System.String@)
  - NDesk.Options.OptionSet.InsertItem(System.Int32,NDesk.Options.Option)
  - NDesk.Options.OptionSet.MessageLocalizer
  - NDesk.Options.OptionSet.Parse(System.Collections.Generic.IEnumerable{System.String})
  - NDesk.Options.OptionSet.Parse(System.String,NDesk.Options.OptionContext)
  - NDesk.Options.OptionSet.RemoveItem(System.Int32)
  - NDesk.Options.OptionSet.SetItem(System.Int32,NDesk.Options.Option)
  - NDesk.Options.OptionSet.WriteOptionDescriptions(System.IO.TextWriter)
  langs:
  - csharp
  - vb
  name: OptionSet
  nameWithType: OptionSet
  fullName: NDesk.Options.OptionSet
  type: Class
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: OptionSet
    path: libs/NDesk/Options.cs
    startLine: 493
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: 'public class OptionSet : KeyedCollection<string, Option>, IList<Option>, ICollection<Option>, IReadOnlyList<Option>, IReadOnlyCollection<Option>, IEnumerable<Option>, IList, ICollection, IEnumerable'
    content.vb: >-
      Public Class OptionSet
          Inherits KeyedCollection(Of String,  Option)
          Implements IList(Of  Option), ICollection(Of  Option), IReadOnlyList(Of  Option), IReadOnlyCollection(Of  Option), IEnumerable(Of  Option), IList, ICollection, IEnumerable
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  - System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  implements:
  - System.Collections.Generic.IList{NDesk.Options.Option}
  - System.Collections.Generic.ICollection{NDesk.Options.Option}
  - System.Collections.Generic.IReadOnlyList{NDesk.Options.Option}
  - System.Collections.Generic.IReadOnlyCollection{NDesk.Options.Option}
  - System.Collections.Generic.IEnumerable{NDesk.Options.Option}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.ChangeItemKey(NDesk.Options.Option,System.String)
  - System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.ClearItems
  - System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Contains(System.String)
  - System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.GetKeyForItem(NDesk.Options.Option)
  - System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.InsertItem(System.Int32,NDesk.Options.Option)
  - System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Remove(System.String)
  - System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.RemoveItem(System.Int32)
  - System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.SetItem(System.Int32,NDesk.Options.Option)
  - System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.TryGetValue(System.String,NDesk.Options.Option@)
  - System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Comparer
  - System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Dictionary
  - System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Item(System.String)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Clear
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.ClearItems
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Contains(NDesk.Options.Option)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.CopyTo(NDesk.Options.Option[],System.Int32)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.GetEnumerator
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.IndexOf(NDesk.Options.Option)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Insert(System.Int32,NDesk.Options.Option)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Remove(NDesk.Options.Option)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.RemoveAt(System.Int32)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Count
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Item(System.Int32)
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Items
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Item(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NDesk.Options.OptionSet.#ctor
  commentId: M:NDesk.Options.OptionSet.#ctor
  id: '#ctor'
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: OptionSet()
  nameWithType: OptionSet.OptionSet()
  fullName: NDesk.Options.OptionSet.OptionSet()
  type: Constructor
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: .ctor
    path: libs/NDesk/Options.cs
    startLine: 495
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionSet()
    content.vb: Public Sub New
  overload: NDesk.Options.OptionSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NDesk.Options.OptionSet.#ctor(System.Converter{System.String,System.String})
  commentId: M:NDesk.Options.OptionSet.#ctor(System.Converter{System.String,System.String})
  id: '#ctor(System.Converter{System.String,System.String})'
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: OptionSet(Converter<String, String>)
  nameWithType: OptionSet.OptionSet(Converter<String, String>)
  fullName: NDesk.Options.OptionSet.OptionSet(System.Converter<System.String, System.String>)
  type: Constructor
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: .ctor
    path: libs/NDesk/Options.cs
    startLine: 500
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionSet(Converter<string, string> localizer)
    parameters:
    - id: localizer
      type: System.Converter{System.String,System.String}
    content.vb: Public Sub New(localizer As Converter(Of String, String))
  overload: NDesk.Options.OptionSet.#ctor*
  nameWithType.vb: OptionSet.OptionSet(Converter(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NDesk.Options.OptionSet.OptionSet(System.Converter(Of System.String, System.String))
  name.vb: OptionSet(Converter(Of String, String))
- uid: NDesk.Options.OptionSet.MessageLocalizer
  commentId: P:NDesk.Options.OptionSet.MessageLocalizer
  id: MessageLocalizer
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: MessageLocalizer
  nameWithType: OptionSet.MessageLocalizer
  fullName: NDesk.Options.OptionSet.MessageLocalizer
  type: Property
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: MessageLocalizer
    path: libs/NDesk/Options.cs
    startLine: 507
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public Converter<string, string> MessageLocalizer { get; }
    parameters: []
    return:
      type: System.Converter{System.String,System.String}
    content.vb: Public ReadOnly Property MessageLocalizer As Converter(Of String, String)
  overload: NDesk.Options.OptionSet.MessageLocalizer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NDesk.Options.OptionSet.GetKeyForItem(NDesk.Options.Option)
  commentId: M:NDesk.Options.OptionSet.GetKeyForItem(NDesk.Options.Option)
  id: GetKeyForItem(NDesk.Options.Option)
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: GetKeyForItem(Option)
  nameWithType: OptionSet.GetKeyForItem(Option)
  fullName: NDesk.Options.OptionSet.GetKeyForItem(NDesk.Options.Option)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: GetKeyForItem
    path: libs/NDesk/Options.cs
    startLine: 511
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: protected override string GetKeyForItem(Option item)
    parameters:
    - id: item
      type: NDesk.Options.Option
    return:
      type: System.String
    content.vb: Protected Overrides Function GetKeyForItem(item As  Option) As String
  overridden: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.GetKeyForItem(NDesk.Options.Option)
  overload: NDesk.Options.OptionSet.GetKeyForItem*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NDesk.Options.OptionSet.GetOptionForName(System.String)
  commentId: M:NDesk.Options.OptionSet.GetOptionForName(System.String)
  id: GetOptionForName(System.String)
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: GetOptionForName(String)
  nameWithType: OptionSet.GetOptionForName(String)
  fullName: NDesk.Options.OptionSet.GetOptionForName(System.String)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: GetOptionForName
    path: libs/NDesk/Options.cs
    startLine: 522
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: >-
      [Obsolete("Use KeyedCollection.this[string]")]

      protected Option GetOptionForName(string option)
    parameters:
    - id: option
      type: System.String
    return:
      type: NDesk.Options.Option
    content.vb: "<Obsolete(\"Use KeyedCollection.this[string]\")>\nProtected Function GetOptionForName(option As String) As "
  overload: NDesk.Options.OptionSet.GetOptionForName*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use KeyedCollection.this[string]
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: NDesk.Options.OptionSet.InsertItem(System.Int32,NDesk.Options.Option)
  commentId: M:NDesk.Options.OptionSet.InsertItem(System.Int32,NDesk.Options.Option)
  id: InsertItem(System.Int32,NDesk.Options.Option)
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: InsertItem(Int32, Option)
  nameWithType: OptionSet.InsertItem(Int32, Option)
  fullName: NDesk.Options.OptionSet.InsertItem(System.Int32, NDesk.Options.Option)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: InsertItem
    path: libs/NDesk/Options.cs
    startLine: 535
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: protected override void InsertItem(int index, Option item)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: NDesk.Options.Option
    content.vb: Protected Overrides Sub InsertItem(index As Integer, item As  Option)
  overridden: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.InsertItem(System.Int32,NDesk.Options.Option)
  overload: NDesk.Options.OptionSet.InsertItem*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NDesk.Options.OptionSet.RemoveItem(System.Int32)
  commentId: M:NDesk.Options.OptionSet.RemoveItem(System.Int32)
  id: RemoveItem(System.Int32)
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: RemoveItem(Int32)
  nameWithType: OptionSet.RemoveItem(Int32)
  fullName: NDesk.Options.OptionSet.RemoveItem(System.Int32)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: RemoveItem
    path: libs/NDesk/Options.cs
    startLine: 541
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: protected override void RemoveItem(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Protected Overrides Sub RemoveItem(index As Integer)
  overridden: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.RemoveItem(System.Int32)
  overload: NDesk.Options.OptionSet.RemoveItem*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NDesk.Options.OptionSet.SetItem(System.Int32,NDesk.Options.Option)
  commentId: M:NDesk.Options.OptionSet.SetItem(System.Int32,NDesk.Options.Option)
  id: SetItem(System.Int32,NDesk.Options.Option)
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: SetItem(Int32, Option)
  nameWithType: OptionSet.SetItem(Int32, Option)
  fullName: NDesk.Options.OptionSet.SetItem(System.Int32, NDesk.Options.Option)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: SetItem
    path: libs/NDesk/Options.cs
    startLine: 551
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: protected override void SetItem(int index, Option item)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: NDesk.Options.Option
    content.vb: Protected Overrides Sub SetItem(index As Integer, item As  Option)
  overridden: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.SetItem(System.Int32,NDesk.Options.Option)
  overload: NDesk.Options.OptionSet.SetItem*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: NDesk.Options.OptionSet.Add(NDesk.Options.Option)
  commentId: M:NDesk.Options.OptionSet.Add(NDesk.Options.Option)
  id: Add(NDesk.Options.Option)
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: Add(Option)
  nameWithType: OptionSet.Add(Option)
  fullName: NDesk.Options.OptionSet.Add(NDesk.Options.Option)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Add
    path: libs/NDesk/Options.cs
    startLine: 577
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionSet Add(Option option)
    parameters:
    - id: option
      type: NDesk.Options.Option
    return:
      type: NDesk.Options.OptionSet
    content.vb: Public Function Add(option As  Option) As OptionSet
  overload: NDesk.Options.OptionSet.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NDesk.Options.OptionSet.Add(System.String,System.Action{System.String})
  commentId: M:NDesk.Options.OptionSet.Add(System.String,System.Action{System.String})
  id: Add(System.String,System.Action{System.String})
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: Add(String, Action<String>)
  nameWithType: OptionSet.Add(String, Action<String>)
  fullName: NDesk.Options.OptionSet.Add(System.String, System.Action<System.String>)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Add
    path: libs/NDesk/Options.cs
    startLine: 600
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionSet Add(string prototype, Action<string> action)
    parameters:
    - id: prototype
      type: System.String
    - id: action
      type: System.Action{System.String}
    return:
      type: NDesk.Options.OptionSet
    content.vb: Public Function Add(prototype As String, action As Action(Of String)) As OptionSet
  overload: NDesk.Options.OptionSet.Add*
  nameWithType.vb: OptionSet.Add(String, Action(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NDesk.Options.OptionSet.Add(System.String, System.Action(Of System.String))
  name.vb: Add(String, Action(Of String))
- uid: NDesk.Options.OptionSet.Add(System.String,System.String,System.Action{System.String})
  commentId: M:NDesk.Options.OptionSet.Add(System.String,System.String,System.Action{System.String})
  id: Add(System.String,System.String,System.Action{System.String})
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: Add(String, String, Action<String>)
  nameWithType: OptionSet.Add(String, String, Action<String>)
  fullName: NDesk.Options.OptionSet.Add(System.String, System.String, System.Action<System.String>)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Add
    path: libs/NDesk/Options.cs
    startLine: 605
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionSet Add(string prototype, string description, Action<string> action)
    parameters:
    - id: prototype
      type: System.String
    - id: description
      type: System.String
    - id: action
      type: System.Action{System.String}
    return:
      type: NDesk.Options.OptionSet
    content.vb: Public Function Add(prototype As String, description As String, action As Action(Of String)) As OptionSet
  overload: NDesk.Options.OptionSet.Add*
  nameWithType.vb: OptionSet.Add(String, String, Action(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NDesk.Options.OptionSet.Add(System.String, System.String, System.Action(Of System.String))
  name.vb: Add(String, String, Action(Of String))
- uid: NDesk.Options.OptionSet.Add(System.String,NDesk.Options.OptionAction{System.String,System.String})
  commentId: M:NDesk.Options.OptionSet.Add(System.String,NDesk.Options.OptionAction{System.String,System.String})
  id: Add(System.String,NDesk.Options.OptionAction{System.String,System.String})
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: Add(String, OptionAction<String, String>)
  nameWithType: OptionSet.Add(String, OptionAction<String, String>)
  fullName: NDesk.Options.OptionSet.Add(System.String, NDesk.Options.OptionAction<System.String, System.String>)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Add
    path: libs/NDesk/Options.cs
    startLine: 615
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionSet Add(string prototype, OptionAction<string, string> action)
    parameters:
    - id: prototype
      type: System.String
    - id: action
      type: NDesk.Options.OptionAction{System.String,System.String}
    return:
      type: NDesk.Options.OptionSet
    content.vb: Public Function Add(prototype As String, action As OptionAction(Of String, String)) As OptionSet
  overload: NDesk.Options.OptionSet.Add*
  nameWithType.vb: OptionSet.Add(String, OptionAction(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NDesk.Options.OptionSet.Add(System.String, NDesk.Options.OptionAction(Of System.String, System.String))
  name.vb: Add(String, OptionAction(Of String, String))
- uid: NDesk.Options.OptionSet.Add(System.String,System.String,NDesk.Options.OptionAction{System.String,System.String})
  commentId: M:NDesk.Options.OptionSet.Add(System.String,System.String,NDesk.Options.OptionAction{System.String,System.String})
  id: Add(System.String,System.String,NDesk.Options.OptionAction{System.String,System.String})
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: Add(String, String, OptionAction<String, String>)
  nameWithType: OptionSet.Add(String, String, OptionAction<String, String>)
  fullName: NDesk.Options.OptionSet.Add(System.String, System.String, NDesk.Options.OptionAction<System.String, System.String>)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Add
    path: libs/NDesk/Options.cs
    startLine: 620
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionSet Add(string prototype, string description, OptionAction<string, string> action)
    parameters:
    - id: prototype
      type: System.String
    - id: description
      type: System.String
    - id: action
      type: NDesk.Options.OptionAction{System.String,System.String}
    return:
      type: NDesk.Options.OptionSet
    content.vb: Public Function Add(prototype As String, description As String, action As OptionAction(Of String, String)) As OptionSet
  overload: NDesk.Options.OptionSet.Add*
  nameWithType.vb: OptionSet.Add(String, String, OptionAction(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NDesk.Options.OptionSet.Add(System.String, System.String, NDesk.Options.OptionAction(Of System.String, System.String))
  name.vb: Add(String, String, OptionAction(Of String, String))
- uid: NDesk.Options.OptionSet.Add``1(System.String,System.Action{``0})
  commentId: M:NDesk.Options.OptionSet.Add``1(System.String,System.Action{``0})
  id: Add``1(System.String,System.Action{``0})
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: Add<T>(String, Action<T>)
  nameWithType: OptionSet.Add<T>(String, Action<T>)
  fullName: NDesk.Options.OptionSet.Add<T>(System.String, System.Action<T>)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Add
    path: libs/NDesk/Options.cs
    startLine: 666
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionSet Add<T>(string prototype, Action<T> action)
    parameters:
    - id: prototype
      type: System.String
    - id: action
      type: System.Action{{T}}
    typeParameters:
    - id: T
    return:
      type: NDesk.Options.OptionSet
    content.vb: Public Function Add(Of T)(prototype As String, action As Action(Of T)) As OptionSet
  overload: NDesk.Options.OptionSet.Add*
  nameWithType.vb: OptionSet.Add(Of T)(String, Action(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NDesk.Options.OptionSet.Add(Of T)(System.String, System.Action(Of T))
  name.vb: Add(Of T)(String, Action(Of T))
- uid: NDesk.Options.OptionSet.Add``1(System.String,System.String,System.Action{``0})
  commentId: M:NDesk.Options.OptionSet.Add``1(System.String,System.String,System.Action{``0})
  id: Add``1(System.String,System.String,System.Action{``0})
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: Add<T>(String, String, Action<T>)
  nameWithType: OptionSet.Add<T>(String, String, Action<T>)
  fullName: NDesk.Options.OptionSet.Add<T>(System.String, System.String, System.Action<T>)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Add
    path: libs/NDesk/Options.cs
    startLine: 671
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionSet Add<T>(string prototype, string description, Action<T> action)
    parameters:
    - id: prototype
      type: System.String
    - id: description
      type: System.String
    - id: action
      type: System.Action{{T}}
    typeParameters:
    - id: T
    return:
      type: NDesk.Options.OptionSet
    content.vb: Public Function Add(Of T)(prototype As String, description As String, action As Action(Of T)) As OptionSet
  overload: NDesk.Options.OptionSet.Add*
  nameWithType.vb: OptionSet.Add(Of T)(String, String, Action(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NDesk.Options.OptionSet.Add(Of T)(System.String, System.String, System.Action(Of T))
  name.vb: Add(Of T)(String, String, Action(Of T))
- uid: NDesk.Options.OptionSet.Add``2(System.String,NDesk.Options.OptionAction{``0,``1})
  commentId: M:NDesk.Options.OptionSet.Add``2(System.String,NDesk.Options.OptionAction{``0,``1})
  id: Add``2(System.String,NDesk.Options.OptionAction{``0,``1})
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: Add<TKey, TValue>(String, OptionAction<TKey, TValue>)
  nameWithType: OptionSet.Add<TKey, TValue>(String, OptionAction<TKey, TValue>)
  fullName: NDesk.Options.OptionSet.Add<TKey, TValue>(System.String, NDesk.Options.OptionAction<TKey, TValue>)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Add
    path: libs/NDesk/Options.cs
    startLine: 676
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionSet Add<TKey, TValue>(string prototype, OptionAction<TKey, TValue> action)
    parameters:
    - id: prototype
      type: System.String
    - id: action
      type: NDesk.Options.OptionAction{{TKey},{TValue}}
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: NDesk.Options.OptionSet
    content.vb: Public Function Add(Of TKey, TValue)(prototype As String, action As OptionAction(Of TKey, TValue)) As OptionSet
  overload: NDesk.Options.OptionSet.Add*
  nameWithType.vb: OptionSet.Add(Of TKey, TValue)(String, OptionAction(Of TKey, TValue))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NDesk.Options.OptionSet.Add(Of TKey, TValue)(System.String, NDesk.Options.OptionAction(Of TKey, TValue))
  name.vb: Add(Of TKey, TValue)(String, OptionAction(Of TKey, TValue))
- uid: NDesk.Options.OptionSet.Add``2(System.String,System.String,NDesk.Options.OptionAction{``0,``1})
  commentId: M:NDesk.Options.OptionSet.Add``2(System.String,System.String,NDesk.Options.OptionAction{``0,``1})
  id: Add``2(System.String,System.String,NDesk.Options.OptionAction{``0,``1})
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: Add<TKey, TValue>(String, String, OptionAction<TKey, TValue>)
  nameWithType: OptionSet.Add<TKey, TValue>(String, String, OptionAction<TKey, TValue>)
  fullName: NDesk.Options.OptionSet.Add<TKey, TValue>(System.String, System.String, NDesk.Options.OptionAction<TKey, TValue>)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Add
    path: libs/NDesk/Options.cs
    startLine: 681
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionSet Add<TKey, TValue>(string prototype, string description, OptionAction<TKey, TValue> action)
    parameters:
    - id: prototype
      type: System.String
    - id: description
      type: System.String
    - id: action
      type: NDesk.Options.OptionAction{{TKey},{TValue}}
    typeParameters:
    - id: TKey
    - id: TValue
    return:
      type: NDesk.Options.OptionSet
    content.vb: Public Function Add(Of TKey, TValue)(prototype As String, description As String, action As OptionAction(Of TKey, TValue)) As OptionSet
  overload: NDesk.Options.OptionSet.Add*
  nameWithType.vb: OptionSet.Add(Of TKey, TValue)(String, String, OptionAction(Of TKey, TValue))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NDesk.Options.OptionSet.Add(Of TKey, TValue)(System.String, System.String, NDesk.Options.OptionAction(Of TKey, TValue))
  name.vb: Add(Of TKey, TValue)(String, String, OptionAction(Of TKey, TValue))
- uid: NDesk.Options.OptionSet.CreateOptionContext
  commentId: M:NDesk.Options.OptionSet.CreateOptionContext
  id: CreateOptionContext
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: CreateOptionContext()
  nameWithType: OptionSet.CreateOptionContext()
  fullName: NDesk.Options.OptionSet.CreateOptionContext()
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: CreateOptionContext
    path: libs/NDesk/Options.cs
    startLine: 686
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: protected virtual OptionContext CreateOptionContext()
    return:
      type: NDesk.Options.OptionContext
    content.vb: Protected Overridable Function CreateOptionContext As OptionContext
  overload: NDesk.Options.OptionSet.CreateOptionContext*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NDesk.Options.OptionSet.Parse(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:NDesk.Options.OptionSet.Parse(System.Collections.Generic.IEnumerable{System.String})
  id: Parse(System.Collections.Generic.IEnumerable{System.String})
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: Parse(IEnumerable<String>)
  nameWithType: OptionSet.Parse(IEnumerable<String>)
  fullName: NDesk.Options.OptionSet.Parse(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Parse
    path: libs/NDesk/Options.cs
    startLine: 720
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public List<string> Parse(IEnumerable<string> arguments)
    parameters:
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Function Parse(arguments As IEnumerable(Of String)) As List(Of String)
  overload: NDesk.Options.OptionSet.Parse*
  nameWithType.vb: OptionSet.Parse(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NDesk.Options.OptionSet.Parse(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Parse(IEnumerable(Of String))
- uid: NDesk.Options.OptionSet.GetOptionParts(System.String,System.String@,System.String@,System.String@,System.String@)
  commentId: M:NDesk.Options.OptionSet.GetOptionParts(System.String,System.String@,System.String@,System.String@,System.String@)
  id: GetOptionParts(System.String,System.String@,System.String@,System.String@,System.String@)
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: GetOptionParts(String, out String, out String, out String, out String)
  nameWithType: OptionSet.GetOptionParts(String, out String, out String, out String, out String)
  fullName: NDesk.Options.OptionSet.GetOptionParts(System.String, out System.String, out System.String, out System.String, out System.String)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: GetOptionParts
    path: libs/NDesk/Options.cs
    startLine: 761
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: protected bool GetOptionParts(string argument, out string flag, out string name, out string sep, out string value)
    parameters:
    - id: argument
      type: System.String
    - id: flag
      type: System.String
    - id: name
      type: System.String
    - id: sep
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Protected Function GetOptionParts(argument As String, ByRef flag As String, ByRef name As String, ByRef sep As String, ByRef value As String) As Boolean
  overload: NDesk.Options.OptionSet.GetOptionParts*
  nameWithType.vb: OptionSet.GetOptionParts(String, ByRef String, ByRef String, ByRef String, ByRef String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: NDesk.Options.OptionSet.GetOptionParts(System.String, ByRef System.String, ByRef System.String, ByRef System.String, ByRef System.String)
  name.vb: GetOptionParts(String, ByRef String, ByRef String, ByRef String, ByRef String)
- uid: NDesk.Options.OptionSet.Parse(System.String,NDesk.Options.OptionContext)
  commentId: M:NDesk.Options.OptionSet.Parse(System.String,NDesk.Options.OptionContext)
  id: Parse(System.String,NDesk.Options.OptionContext)
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: Parse(String, OptionContext)
  nameWithType: OptionSet.Parse(String, OptionContext)
  fullName: NDesk.Options.OptionSet.Parse(System.String, NDesk.Options.OptionContext)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Parse
    path: libs/NDesk/Options.cs
    startLine: 780
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: protected virtual bool Parse(string argument, OptionContext c)
    parameters:
    - id: argument
      type: System.String
    - id: c
      type: NDesk.Options.OptionContext
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function Parse(argument As String, c As OptionContext) As Boolean
  overload: NDesk.Options.OptionSet.Parse*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: NDesk.Options.OptionSet.WriteOptionDescriptions(System.IO.TextWriter)
  commentId: M:NDesk.Options.OptionSet.WriteOptionDescriptions(System.IO.TextWriter)
  id: WriteOptionDescriptions(System.IO.TextWriter)
  parent: NDesk.Options.OptionSet
  langs:
  - csharp
  - vb
  name: WriteOptionDescriptions(TextWriter)
  nameWithType: OptionSet.WriteOptionDescriptions(TextWriter)
  fullName: NDesk.Options.OptionSet.WriteOptionDescriptions(System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: WriteOptionDescriptions
    path: libs/NDesk/Options.cs
    startLine: 898
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public void WriteOptionDescriptions(TextWriter o)
    parameters:
    - id: o
      type: System.IO.TextWriter
    content.vb: Public Sub WriteOptionDescriptions(o As TextWriter)
  overload: NDesk.Options.OptionSet.WriteOptionDescriptions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: NDesk.Options
  commentId: N:NDesk.Options
  name: NDesk.Options
  nameWithType: NDesk.Options
  fullName: NDesk.Options
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  commentId: T:System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.Collection`1
  name: Collection<Option>
  nameWithType: Collection<Option>
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>
  nameWithType.vb: Collection(Of Option)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option)
  name.vb: Collection(Of Option)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  commentId: T:System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.KeyedCollection`2
  name: KeyedCollection<String, Option>
  nameWithType: KeyedCollection<String, Option>
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>
  nameWithType.vb: KeyedCollection(Of String, Option)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option)
  name.vb: KeyedCollection(Of String, Option)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{NDesk.Options.Option}
  commentId: T:System.Collections.Generic.IList{NDesk.Options.Option}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Option>
  nameWithType: IList<Option>
  fullName: System.Collections.Generic.IList<NDesk.Options.Option>
  nameWithType.vb: IList(Of Option)
  fullName.vb: System.Collections.Generic.IList(Of NDesk.Options.Option)
  name.vb: IList(Of Option)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{NDesk.Options.Option}
  commentId: T:System.Collections.Generic.ICollection{NDesk.Options.Option}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Option>
  nameWithType: ICollection<Option>
  fullName: System.Collections.Generic.ICollection<NDesk.Options.Option>
  nameWithType.vb: ICollection(Of Option)
  fullName.vb: System.Collections.Generic.ICollection(Of NDesk.Options.Option)
  name.vb: ICollection(Of Option)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{NDesk.Options.Option}
  commentId: T:System.Collections.Generic.IReadOnlyList{NDesk.Options.Option}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<Option>
  nameWithType: IReadOnlyList<Option>
  fullName: System.Collections.Generic.IReadOnlyList<NDesk.Options.Option>
  nameWithType.vb: IReadOnlyList(Of Option)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of NDesk.Options.Option)
  name.vb: IReadOnlyList(Of Option)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{NDesk.Options.Option}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{NDesk.Options.Option}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<Option>
  nameWithType: IReadOnlyCollection<Option>
  fullName: System.Collections.Generic.IReadOnlyCollection<NDesk.Options.Option>
  nameWithType.vb: IReadOnlyCollection(Of Option)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of NDesk.Options.Option)
  name.vb: IReadOnlyCollection(Of Option)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{NDesk.Options.Option}
  commentId: T:System.Collections.Generic.IEnumerable{NDesk.Options.Option}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Option>
  nameWithType: IEnumerable<Option>
  fullName: System.Collections.Generic.IEnumerable<NDesk.Options.Option>
  nameWithType.vb: IEnumerable(Of Option)
  fullName.vb: System.Collections.Generic.IEnumerable(Of NDesk.Options.Option)
  name.vb: IEnumerable(Of Option)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.ChangeItemKey(NDesk.Options.Option,System.String)
  commentId: M:System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.ChangeItemKey(NDesk.Options.Option,System.String)
  parent: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  definition: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  name: ChangeItemKey(Option, String)
  nameWithType: KeyedCollection<String, Option>.ChangeItemKey(Option, String)
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.ChangeItemKey(NDesk.Options.Option, System.String)
  nameWithType.vb: KeyedCollection(Of String, Option).ChangeItemKey(Option, String)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).ChangeItemKey(NDesk.Options.Option, System.String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
    name: ChangeItemKey
    nameWithType: KeyedCollection<String, Option>.ChangeItemKey
    fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.ChangeItemKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
    name: ChangeItemKey
    nameWithType: KeyedCollection(Of String, Option).ChangeItemKey
    fullName: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).ChangeItemKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.ClearItems
  commentId: M:System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.ClearItems
  parent: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  definition: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  name: ClearItems()
  nameWithType: KeyedCollection<String, Option>.ClearItems()
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.ClearItems()
  nameWithType.vb: KeyedCollection(Of String, Option).ClearItems()
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
    name: ClearItems
    nameWithType: KeyedCollection<String, Option>.ClearItems
    fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
    name: ClearItems
    nameWithType: KeyedCollection(Of String, Option).ClearItems
    fullName: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Contains(System.String)
  commentId: M:System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Contains(System.String)
  parent: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  definition: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  name: Contains(String)
  nameWithType: KeyedCollection<String, Option>.Contains(String)
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.Contains(System.String)
  nameWithType.vb: KeyedCollection(Of String, Option).Contains(String)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).Contains(System.String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
    name: Contains
    nameWithType: KeyedCollection<String, Option>.Contains
    fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
    name: Contains
    nameWithType: KeyedCollection(Of String, Option).Contains
    fullName: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.GetKeyForItem(NDesk.Options.Option)
  commentId: M:System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.GetKeyForItem(NDesk.Options.Option)
  parent: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  definition: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  name: GetKeyForItem(Option)
  nameWithType: KeyedCollection<String, Option>.GetKeyForItem(Option)
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.GetKeyForItem(NDesk.Options.Option)
  nameWithType.vb: KeyedCollection(Of String, Option).GetKeyForItem(Option)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).GetKeyForItem(NDesk.Options.Option)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
    name: GetKeyForItem
    nameWithType: KeyedCollection<String, Option>.GetKeyForItem
    fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.GetKeyForItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
    name: GetKeyForItem
    nameWithType: KeyedCollection(Of String, Option).GetKeyForItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).GetKeyForItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.InsertItem(System.Int32,NDesk.Options.Option)
  commentId: M:System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.InsertItem(System.Int32,NDesk.Options.Option)
  parent: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  definition: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  name: InsertItem(Int32, Option)
  nameWithType: KeyedCollection<String, Option>.InsertItem(Int32, Option)
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.InsertItem(System.Int32, NDesk.Options.Option)
  nameWithType.vb: KeyedCollection(Of String, Option).InsertItem(Int32, Option)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).InsertItem(System.Int32, NDesk.Options.Option)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: KeyedCollection<String, Option>.InsertItem
    fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: KeyedCollection(Of String, Option).InsertItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Remove(System.String)
  commentId: M:System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Remove(System.String)
  parent: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  definition: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  name: Remove(String)
  nameWithType: KeyedCollection<String, Option>.Remove(String)
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.Remove(System.String)
  nameWithType.vb: KeyedCollection(Of String, Option).Remove(String)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).Remove(System.String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
    name: Remove
    nameWithType: KeyedCollection<String, Option>.Remove
    fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
    name: Remove
    nameWithType: KeyedCollection(Of String, Option).Remove
    fullName: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.RemoveItem(System.Int32)
  commentId: M:System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.RemoveItem(System.Int32)
  parent: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  definition: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  name: RemoveItem(Int32)
  nameWithType: KeyedCollection<String, Option>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.RemoveItem(System.Int32)
  nameWithType.vb: KeyedCollection(Of String, Option).RemoveItem(Int32)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).RemoveItem(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: KeyedCollection<String, Option>.RemoveItem
    fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: KeyedCollection(Of String, Option).RemoveItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.SetItem(System.Int32,NDesk.Options.Option)
  commentId: M:System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.SetItem(System.Int32,NDesk.Options.Option)
  parent: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  definition: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  name: SetItem(Int32, Option)
  nameWithType: KeyedCollection<String, Option>.SetItem(Int32, Option)
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.SetItem(System.Int32, NDesk.Options.Option)
  nameWithType.vb: KeyedCollection(Of String, Option).SetItem(Int32, Option)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).SetItem(System.Int32, NDesk.Options.Option)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: KeyedCollection<String, Option>.SetItem
    fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: KeyedCollection(Of String, Option).SetItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.TryGetValue(System.String,NDesk.Options.Option@)
  commentId: M:System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.TryGetValue(System.String,NDesk.Options.Option@)
  parent: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  definition: System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)
  name: TryGetValue(String, Option)
  nameWithType: KeyedCollection<String, Option>.TryGetValue(String, Option)
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.TryGetValue(System.String, NDesk.Options.Option)
  nameWithType.vb: KeyedCollection(Of String, Option).TryGetValue(String, Option)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).TryGetValue(System.String, NDesk.Options.Option)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: KeyedCollection<String, Option>.TryGetValue
    fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: KeyedCollection(Of String, Option).TryGetValue
    fullName: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Comparer
  commentId: P:System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Comparer
  parent: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  definition: System.Collections.ObjectModel.KeyedCollection`2.Comparer
  name: Comparer
  nameWithType: KeyedCollection<String, Option>.Comparer
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.Comparer
  nameWithType.vb: KeyedCollection(Of String, Option).Comparer
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).Comparer
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Dictionary
  commentId: P:System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Dictionary
  parent: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  definition: System.Collections.ObjectModel.KeyedCollection`2.Dictionary
  name: Dictionary
  nameWithType: KeyedCollection<String, Option>.Dictionary
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.Dictionary
  nameWithType.vb: KeyedCollection(Of String, Option).Dictionary
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).Dictionary
- uid: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Item(System.String)
  commentId: P:System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}.Item(System.String)
  parent: System.Collections.ObjectModel.KeyedCollection{System.String,NDesk.Options.Option}
  definition: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  name: Item[String]
  nameWithType: KeyedCollection<String, Option>.Item[String]
  fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.Item[System.String]
  nameWithType.vb: KeyedCollection(Of String, Option).Item(String)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
    name: Item
    nameWithType: KeyedCollection<String, Option>.Item
    fullName: System.Collections.ObjectModel.KeyedCollection<System.String, NDesk.Options.Option>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
    name: Item
    nameWithType: KeyedCollection(Of String, Option).Item
    fullName: System.Collections.ObjectModel.KeyedCollection(Of System.String, NDesk.Options.Option).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: Collection<Option>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of Option).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<Option>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of Option).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<Option>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of Option).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<Option>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of Option).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Clear
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Clear
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.Clear
  name: Clear()
  nameWithType: Collection<Option>.Clear()
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.Clear()
  nameWithType.vb: Collection(Of Option).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<Option>.Clear
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of Option).Clear
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.ClearItems
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.ClearItems
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.ClearItems
  name: ClearItems()
  nameWithType: Collection<Option>.ClearItems()
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.ClearItems()
  nameWithType.vb: Collection(Of Option).ClearItems()
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: ClearItems
    nameWithType: Collection<Option>.ClearItems
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: ClearItems
    nameWithType: Collection(Of Option).ClearItems
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Contains(NDesk.Options.Option)
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Contains(NDesk.Options.Option)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.Contains(`0)
  name: Contains(Option)
  nameWithType: Collection<Option>.Contains(Option)
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.Contains(NDesk.Options.Option)
  nameWithType.vb: Collection(Of Option).Contains(Option)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).Contains(NDesk.Options.Option)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<Option>.Contains
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of Option).Contains
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.CopyTo(NDesk.Options.Option[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.CopyTo(NDesk.Options.Option[],System.Int32)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(Option[], Int32)
  nameWithType: Collection<Option>.CopyTo(Option[], Int32)
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.CopyTo(NDesk.Options.Option[], System.Int32)
  nameWithType.vb: Collection(Of Option).CopyTo(Option(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).CopyTo(NDesk.Options.Option(), System.Int32)
  name.vb: CopyTo(Option(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<Option>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of Option).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.GetEnumerator
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: Collection<Option>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.GetEnumerator()
  nameWithType.vb: Collection(Of Option).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<Option>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of Option).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.IndexOf(NDesk.Options.Option)
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.IndexOf(NDesk.Options.Option)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  name: IndexOf(Option)
  nameWithType: Collection<Option>.IndexOf(Option)
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.IndexOf(NDesk.Options.Option)
  nameWithType.vb: Collection(Of Option).IndexOf(Option)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).IndexOf(NDesk.Options.Option)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<Option>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of Option).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Insert(System.Int32,NDesk.Options.Option)
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Insert(System.Int32,NDesk.Options.Option)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  name: Insert(Int32, Option)
  nameWithType: Collection<Option>.Insert(Int32, Option)
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.Insert(System.Int32, NDesk.Options.Option)
  nameWithType.vb: Collection(Of Option).Insert(Int32, Option)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).Insert(System.Int32, NDesk.Options.Option)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<Option>.Insert
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of Option).Insert
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Remove(NDesk.Options.Option)
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Remove(NDesk.Options.Option)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.Remove(`0)
  name: Remove(Option)
  nameWithType: Collection<Option>.Remove(Option)
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.Remove(NDesk.Options.Option)
  nameWithType.vb: Collection(Of Option).Remove(Option)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).Remove(NDesk.Options.Option)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<Option>.Remove
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of Option).Remove
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: NDesk.Options.Option
    name: Option
    nameWithType: Option
    fullName: NDesk.Options.Option
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: Collection<Option>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of Option).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<Option>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of Option).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<Option>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of Option).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<Option>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of Option).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<Option>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of Option).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<Option>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of Option).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: Collection<Option>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of Option).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<Option>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of Option).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: Collection<Option>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of Option).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<Option>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of Option).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: Collection<Option>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of Option).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<Option>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of Option).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<Option>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of Option).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<Option>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of Option).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: Collection<Option>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of Option).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<Option>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of Option).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Count
  commentId: P:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Count
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.Count
  name: Count
  nameWithType: Collection<Option>.Count
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.Count
  nameWithType.vb: Collection(Of Option).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).Count
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: Collection<Option>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.Item[System.Int32]
  nameWithType.vb: Collection(Of Option).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<Option>.Item
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of Option).Item
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Items
  commentId: P:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.Items
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.Items
  name: Items
  nameWithType: Collection<Option>.Items
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.Items
  nameWithType.vb: Collection(Of Option).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).Items
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<Option>.IsReadOnly
  nameWithType: Collection<Option>.ICollection<Option>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.Generic.ICollection<NDesk.Options.Option>.IsReadOnly
  nameWithType.vb: Collection(Of Option).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: Collection<Option>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of Option).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: Collection<Option>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of Option).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: Collection<Option>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of Option).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: Collection<Option>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of Option).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection{NDesk.Options.Option}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.Collection{NDesk.Options.Option}
  definition: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: Collection<Option>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of Option).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<Option>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<NDesk.Options.Option>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of Option).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of NDesk.Options.Option).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.ObjectModel.Collection`1
  commentId: T:System.Collections.ObjectModel.Collection`1
  isExternal: true
  name: Collection<T>
  nameWithType: Collection<T>
  fullName: System.Collections.ObjectModel.Collection<T>
  nameWithType.vb: Collection(Of T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T)
  name.vb: Collection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: System.Collections.ObjectModel.Collection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: System.Collections.ObjectModel.KeyedCollection`2
  commentId: T:System.Collections.ObjectModel.KeyedCollection`2
  isExternal: true
  name: KeyedCollection<TKey, TItem>
  nameWithType: KeyedCollection<TKey, TItem>
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>
  nameWithType.vb: KeyedCollection(Of TKey, TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem)
  name.vb: KeyedCollection(Of TKey, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2
    name: KeyedCollection
    nameWithType: KeyedCollection
    fullName: System.Collections.ObjectModel.KeyedCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
  isExternal: true
  name: ChangeItemKey(TItem, TKey)
  nameWithType: KeyedCollection<TKey, TItem>.ChangeItemKey(TItem, TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ChangeItemKey(TItem, TKey)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).ChangeItemKey(TItem, TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ChangeItemKey(TItem, TKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
    name: ChangeItemKey
    nameWithType: KeyedCollection<TKey, TItem>.ChangeItemKey
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ChangeItemKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ChangeItemKey(`1,`0)
    name: ChangeItemKey
    nameWithType: KeyedCollection(Of TKey, TItem).ChangeItemKey
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ChangeItemKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.ClearItems
  isExternal: true
  name: ClearItems()
  nameWithType: KeyedCollection<TKey, TItem>.ClearItems()
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ClearItems()
  nameWithType.vb: KeyedCollection(Of TKey, TItem).ClearItems()
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
    name: ClearItems
    nameWithType: KeyedCollection<TKey, TItem>.ClearItems
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.ClearItems
    name: ClearItems
    nameWithType: KeyedCollection(Of TKey, TItem).ClearItems
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
  isExternal: true
  name: Contains(TKey)
  nameWithType: KeyedCollection<TKey, TItem>.Contains(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains(TKey)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Contains(TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Contains(TKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
    name: Contains
    nameWithType: KeyedCollection<TKey, TItem>.Contains
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)
    name: Contains
    nameWithType: KeyedCollection(Of TKey, TItem).Contains
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
  isExternal: true
  name: GetKeyForItem(TItem)
  nameWithType: KeyedCollection<TKey, TItem>.GetKeyForItem(TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.GetKeyForItem(TItem)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).GetKeyForItem(TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).GetKeyForItem(TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
    name: GetKeyForItem
    nameWithType: KeyedCollection<TKey, TItem>.GetKeyForItem
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.GetKeyForItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.GetKeyForItem(`1)
    name: GetKeyForItem
    nameWithType: KeyedCollection(Of TKey, TItem).GetKeyForItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).GetKeyForItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
  isExternal: true
  name: InsertItem(Int32, TItem)
  nameWithType: KeyedCollection<TKey, TItem>.InsertItem(Int32, TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.InsertItem(System.Int32, TItem)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).InsertItem(Int32, TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).InsertItem(System.Int32, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: KeyedCollection<TKey, TItem>.InsertItem
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.InsertItem(System.Int32,`1)
    name: InsertItem
    nameWithType: KeyedCollection(Of TKey, TItem).InsertItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).InsertItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
  isExternal: true
  name: Remove(TKey)
  nameWithType: KeyedCollection<TKey, TItem>.Remove(TKey)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Remove(TKey)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Remove(TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
    name: Remove
    nameWithType: KeyedCollection<TKey, TItem>.Remove
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)
    name: Remove
    nameWithType: KeyedCollection(Of TKey, TItem).Remove
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
  isExternal: true
  name: RemoveItem(Int32)
  nameWithType: KeyedCollection<TKey, TItem>.RemoveItem(Int32)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.RemoveItem(System.Int32)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).RemoveItem(Int32)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).RemoveItem(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: KeyedCollection<TKey, TItem>.RemoveItem
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.RemoveItem(System.Int32)
    name: RemoveItem
    nameWithType: KeyedCollection(Of TKey, TItem).RemoveItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).RemoveItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
  isExternal: true
  name: SetItem(Int32, TItem)
  nameWithType: KeyedCollection<TKey, TItem>.SetItem(Int32, TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.SetItem(System.Int32, TItem)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).SetItem(Int32, TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).SetItem(System.Int32, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: KeyedCollection<TKey, TItem>.SetItem
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.SetItem(System.Int32,`1)
    name: SetItem
    nameWithType: KeyedCollection(Of TKey, TItem).SetItem
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).SetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)
  isExternal: true
  name: TryGetValue(TKey, TItem)
  nameWithType: KeyedCollection<TKey, TItem>.TryGetValue(TKey, TItem)
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.TryGetValue(TKey, TItem)
  nameWithType.vb: KeyedCollection(Of TKey, TItem).TryGetValue(TKey, TItem)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).TryGetValue(TKey, TItem)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: KeyedCollection<TKey, TItem>.TryGetValue
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: KeyedCollection(Of TKey, TItem).TryGetValue
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.KeyedCollection`2.Comparer
  commentId: P:System.Collections.ObjectModel.KeyedCollection`2.Comparer
  isExternal: true
  name: Comparer
  nameWithType: KeyedCollection<TKey, TItem>.Comparer
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Comparer
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Comparer
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Comparer
- uid: System.Collections.ObjectModel.KeyedCollection`2.Dictionary
  commentId: P:System.Collections.ObjectModel.KeyedCollection`2.Dictionary
  isExternal: true
  name: Dictionary
  nameWithType: KeyedCollection<TKey, TItem>.Dictionary
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Dictionary
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Dictionary
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Dictionary
- uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  commentId: P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  nameWithType: KeyedCollection<TKey, TItem>.Item[TKey]
  fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Item[TKey]
  nameWithType.vb: KeyedCollection(Of TKey, TItem).Item(TKey)
  fullName.vb: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
    name: Item
    nameWithType: KeyedCollection<TKey, TItem>.Item
    fullName: System.Collections.ObjectModel.KeyedCollection<TKey, TItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.KeyedCollection`2.Item(`0)
    name: Item
    nameWithType: KeyedCollection(Of TKey, TItem).Item
    fullName: System.Collections.ObjectModel.KeyedCollection(Of TKey, TItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: Collection<T>.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: Collection<T>.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: Collection(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: Collection<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: Collection<T>.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: Collection(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Clear
  commentId: M:System.Collections.ObjectModel.Collection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: Collection<T>.Clear()
  fullName: System.Collections.ObjectModel.Collection<T>.Clear()
  nameWithType.vb: Collection(Of T).Clear()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection<T>.Clear
    fullName: System.Collections.ObjectModel.Collection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Clear
    name: Clear
    nameWithType: Collection(Of T).Clear
    fullName: System.Collections.ObjectModel.Collection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.ClearItems
  commentId: M:System.Collections.ObjectModel.Collection`1.ClearItems
  isExternal: true
  name: ClearItems()
  nameWithType: Collection<T>.ClearItems()
  fullName: System.Collections.ObjectModel.Collection<T>.ClearItems()
  nameWithType.vb: Collection(Of T).ClearItems()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).ClearItems()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: ClearItems
    nameWithType: Collection<T>.ClearItems
    fullName: System.Collections.ObjectModel.Collection<T>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.ClearItems
    name: ClearItems
    nameWithType: Collection(Of T).ClearItems
    fullName: System.Collections.ObjectModel.Collection(Of T).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: Collection<T>.Contains(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Contains(T)
  nameWithType.vb: Collection(Of T).Contains(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection<T>.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Contains(`0)
    name: Contains
    nameWithType: Collection(Of T).Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: Collection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: Collection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection<T>.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Collection(Of T).CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: Collection<T>.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator()
  nameWithType.vb: Collection(Of T).GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection<T>.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Collection(Of T).GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: Collection<T>.IndexOf(T)
  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf(T)
  nameWithType.vb: Collection(Of T).IndexOf(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection<T>.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)
    name: IndexOf
    nameWithType: Collection(Of T).IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: Collection<T>.Insert(Int32, T)
  fullName: System.Collections.ObjectModel.Collection<T>.Insert(System.Int32, T)
  nameWithType.vb: Collection(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection<T>.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: Collection(Of T).Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
  commentId: M:System.Collections.ObjectModel.Collection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: Collection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.Collection<T>.Remove(T)
  nameWithType.vb: Collection(Of T).Remove(T)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection<T>.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Remove(`0)
    name: Remove
    nameWithType: Collection(Of T).Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: Collection<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt(System.Int32)
  nameWithType.vb: Collection(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection<T>.RemoveAt
    fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: Collection(Of T).RemoveAt
    fullName: System.Collections.ObjectModel.Collection(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Collection<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Collection<T>.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Collection(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: Collection<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Collection<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: Collection<T>.IList.Add(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: Collection<T>.IList.Add
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: Collection(Of T).System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: Collection<T>.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: Collection<T>.IList.Contains
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: Collection(Of T).System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: Collection<T>.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: Collection<T>.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: Collection(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: Collection<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: Collection<T>.IList.Insert
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: Collection(Of T).System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: Collection<T>.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: Collection(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: Collection<T>.IList.Remove
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: Collection(Of T).System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Count
  commentId: P:System.Collections.ObjectModel.Collection`1.Count
  isExternal: true
  name: Count
  nameWithType: Collection<T>.Count
  fullName: System.Collections.ObjectModel.Collection<T>.Count
  nameWithType.vb: Collection(Of T).Count
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Count
- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: Collection<T>.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.Item[System.Int32]
  nameWithType.vb: Collection(Of T).Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection<T>.Item
    fullName: System.Collections.ObjectModel.Collection<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)
    name: Item
    nameWithType: Collection(Of T).Item
    fullName: System.Collections.ObjectModel.Collection(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.Collection`1.Items
  commentId: P:System.Collections.ObjectModel.Collection`1.Items
  isExternal: true
  name: Items
  nameWithType: Collection<T>.Items
  fullName: System.Collections.ObjectModel.Collection<T>.Items
  nameWithType.vb: Collection(Of T).Items
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).Items
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: Collection<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: Collection<T>.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: Collection<T>.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Collection(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: Collection<T>.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: Collection<T>.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: Collection(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: Collection<T>.IList.Item[Int32]
  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: Collection(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: Collection<T>.IList.Item
    fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: Collection(Of T).System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.Collection(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NDesk.Options.OptionSet.#ctor*
  commentId: Overload:NDesk.Options.OptionSet.#ctor
  name: OptionSet
  nameWithType: OptionSet.OptionSet
  fullName: NDesk.Options.OptionSet.OptionSet
- uid: System.Converter{System.String,System.String}
  commentId: T:System.Converter{System.String,System.String}
  parent: System
  definition: System.Converter`2
  name: Converter<String, String>
  nameWithType: Converter<String, String>
  fullName: System.Converter<System.String, System.String>
  nameWithType.vb: Converter(Of String, String)
  fullName.vb: System.Converter(Of System.String, System.String)
  name.vb: Converter(Of String, String)
  spec.csharp:
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Converter`2
  commentId: T:System.Converter`2
  isExternal: true
  name: Converter<TInput, TOutput>
  nameWithType: Converter<TInput, TOutput>
  fullName: System.Converter<TInput, TOutput>
  nameWithType.vb: Converter(Of TInput, TOutput)
  fullName.vb: System.Converter(Of TInput, TOutput)
  name.vb: Converter(Of TInput, TOutput)
  spec.csharp:
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
- uid: NDesk.Options.OptionSet.MessageLocalizer*
  commentId: Overload:NDesk.Options.OptionSet.MessageLocalizer
  name: MessageLocalizer
  nameWithType: OptionSet.MessageLocalizer
  fullName: NDesk.Options.OptionSet.MessageLocalizer
- uid: NDesk.Options.OptionSet.GetKeyForItem*
  commentId: Overload:NDesk.Options.OptionSet.GetKeyForItem
  name: GetKeyForItem
  nameWithType: OptionSet.GetKeyForItem
  fullName: NDesk.Options.OptionSet.GetKeyForItem
- uid: NDesk.Options.Option
  commentId: T:NDesk.Options.Option
  parent: NDesk.Options
  name: Option
  nameWithType: Option
  fullName: NDesk.Options.Option
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NDesk.Options.OptionSet.GetOptionForName*
  commentId: Overload:NDesk.Options.OptionSet.GetOptionForName
  name: GetOptionForName
  nameWithType: OptionSet.GetOptionForName
  fullName: NDesk.Options.OptionSet.GetOptionForName
- uid: NDesk.Options.OptionSet.InsertItem*
  commentId: Overload:NDesk.Options.OptionSet.InsertItem
  name: InsertItem
  nameWithType: OptionSet.InsertItem
  fullName: NDesk.Options.OptionSet.InsertItem
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NDesk.Options.OptionSet.RemoveItem*
  commentId: Overload:NDesk.Options.OptionSet.RemoveItem
  name: RemoveItem
  nameWithType: OptionSet.RemoveItem
  fullName: NDesk.Options.OptionSet.RemoveItem
- uid: NDesk.Options.OptionSet.SetItem*
  commentId: Overload:NDesk.Options.OptionSet.SetItem
  name: SetItem
  nameWithType: OptionSet.SetItem
  fullName: NDesk.Options.OptionSet.SetItem
- uid: NDesk.Options.OptionSet.Add*
  commentId: Overload:NDesk.Options.OptionSet.Add
  name: Add
  nameWithType: OptionSet.Add
  fullName: NDesk.Options.OptionSet.Add
- uid: NDesk.Options.OptionSet
  commentId: T:NDesk.Options.OptionSet
  parent: NDesk.Options
  name: OptionSet
  nameWithType: OptionSet
  fullName: NDesk.Options.OptionSet
- uid: System.Action{System.String}
  commentId: T:System.Action{System.String}
  parent: System
  definition: System.Action`1
  name: Action<String>
  nameWithType: Action<String>
  fullName: System.Action<System.String>
  nameWithType.vb: Action(Of String)
  fullName.vb: System.Action(Of System.String)
  name.vb: Action(Of String)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NDesk.Options.OptionAction{System.String,System.String}
  commentId: T:NDesk.Options.OptionAction{System.String,System.String}
  parent: NDesk.Options
  definition: NDesk.Options.OptionAction`2
  name: OptionAction<String, String>
  nameWithType: OptionAction<String, String>
  fullName: NDesk.Options.OptionAction<System.String, System.String>
  nameWithType.vb: OptionAction(Of String, String)
  fullName.vb: NDesk.Options.OptionAction(Of System.String, System.String)
  name.vb: OptionAction(Of String, String)
  spec.csharp:
  - uid: NDesk.Options.OptionAction`2
    name: OptionAction
    nameWithType: OptionAction
    fullName: NDesk.Options.OptionAction
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NDesk.Options.OptionAction`2
    name: OptionAction
    nameWithType: OptionAction
    fullName: NDesk.Options.OptionAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: NDesk.Options.OptionAction`2
  commentId: T:NDesk.Options.OptionAction`2
  name: OptionAction<TKey, TValue>
  nameWithType: OptionAction<TKey, TValue>
  fullName: NDesk.Options.OptionAction<TKey, TValue>
  nameWithType.vb: OptionAction(Of TKey, TValue)
  fullName.vb: NDesk.Options.OptionAction(Of TKey, TValue)
  name.vb: OptionAction(Of TKey, TValue)
  spec.csharp:
  - uid: NDesk.Options.OptionAction`2
    name: OptionAction
    nameWithType: OptionAction
    fullName: NDesk.Options.OptionAction
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NDesk.Options.OptionAction`2
    name: OptionAction
    nameWithType: OptionAction
    fullName: NDesk.Options.OptionAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{{T}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NDesk.Options.OptionAction{{TKey},{TValue}}
  commentId: T:NDesk.Options.OptionAction{``0,``1}
  parent: NDesk.Options
  definition: NDesk.Options.OptionAction`2
  name: OptionAction<TKey, TValue>
  nameWithType: OptionAction<TKey, TValue>
  fullName: NDesk.Options.OptionAction<TKey, TValue>
  nameWithType.vb: OptionAction(Of TKey, TValue)
  fullName.vb: NDesk.Options.OptionAction(Of TKey, TValue)
  name.vb: OptionAction(Of TKey, TValue)
  spec.csharp:
  - uid: NDesk.Options.OptionAction`2
    name: OptionAction
    nameWithType: OptionAction
    fullName: NDesk.Options.OptionAction
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NDesk.Options.OptionAction`2
    name: OptionAction
    nameWithType: OptionAction
    fullName: NDesk.Options.OptionAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: NDesk.Options.OptionSet.CreateOptionContext*
  commentId: Overload:NDesk.Options.OptionSet.CreateOptionContext
  name: CreateOptionContext
  nameWithType: OptionSet.CreateOptionContext
  fullName: NDesk.Options.OptionSet.CreateOptionContext
- uid: NDesk.Options.OptionContext
  commentId: T:NDesk.Options.OptionContext
  parent: NDesk.Options
  name: OptionContext
  nameWithType: OptionContext
  fullName: NDesk.Options.OptionContext
- uid: NDesk.Options.OptionSet.Parse*
  commentId: Overload:NDesk.Options.OptionSet.Parse
  name: Parse
  nameWithType: OptionSet.Parse
  fullName: NDesk.Options.OptionSet.Parse
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: NDesk.Options.OptionSet.GetOptionParts*
  commentId: Overload:NDesk.Options.OptionSet.GetOptionParts
  name: GetOptionParts
  nameWithType: OptionSet.GetOptionParts
  fullName: NDesk.Options.OptionSet.GetOptionParts
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: NDesk.Options.OptionSet.WriteOptionDescriptions*
  commentId: Overload:NDesk.Options.OptionSet.WriteOptionDescriptions
  name: WriteOptionDescriptions
  nameWithType: OptionSet.WriteOptionDescriptions
  fullName: NDesk.Options.OptionSet.WriteOptionDescriptions
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
