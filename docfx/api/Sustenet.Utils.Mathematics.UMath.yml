### YamlMime:ManagedReference
items:
- uid: Sustenet.Utils.Mathematics.UMath
  commentId: T:Sustenet.Utils.Mathematics.UMath
  id: UMath
  parent: Sustenet.Utils.Mathematics
  children:
  - Sustenet.Utils.Mathematics.UMath.InRange(System.Int32,System.Int32,System.Int32)
  - Sustenet.Utils.Mathematics.UMath.InRange(System.Single,System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: UMath
  nameWithType: UMath
  fullName: Sustenet.Utils.Mathematics.UMath
  type: Class
  source:
    remote:
      path: src/Utils/UMath.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: UMath
    path: src/Utils/UMath.cs
    startLine: 22
  assemblies:
  - Sustenet
  namespace: Sustenet.Utils.Mathematics
  summary: "\nThe Math Utility class.\n"
  example: []
  syntax:
    content: public static class UMath
    content.vb: Public Module UMath
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Sustenet.Utils.Mathematics.UMath.InRange(System.Int32,System.Int32,System.Int32)
  commentId: M:Sustenet.Utils.Mathematics.UMath.InRange(System.Int32,System.Int32,System.Int32)
  id: InRange(System.Int32,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: Sustenet.Utils.Mathematics.UMath
  langs:
  - csharp
  - vb
  name: InRange(Int32, Int32, Int32)
  nameWithType: UMath.InRange(Int32, Int32, Int32)
  fullName: Sustenet.Utils.Mathematics.UMath.InRange(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/Utils/UMath.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: InRange
    path: src/Utils/UMath.cs
    startLine: 30
  assemblies:
  - Sustenet
  namespace: Sustenet.Utils.Mathematics
  summary: "\nDetermines if a number is in range of min and max (inclusive).\n"
  example: []
  syntax:
    content: public static bool InRange(this int num, int min, int max)
    parameters:
    - id: num
      type: System.Int32
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InRange(num As Integer, min As Integer, max As Integer) As Boolean
  overload: Sustenet.Utils.Mathematics.UMath.InRange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sustenet.Utils.Mathematics.UMath.InRange(System.Single,System.Single,System.Single)
  commentId: M:Sustenet.Utils.Mathematics.UMath.InRange(System.Single,System.Single,System.Single)
  id: InRange(System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: Sustenet.Utils.Mathematics.UMath
  langs:
  - csharp
  - vb
  name: InRange(Single, Single, Single)
  nameWithType: UMath.InRange(Single, Single, Single)
  fullName: Sustenet.Utils.Mathematics.UMath.InRange(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/Utils/UMath.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: InRange
    path: src/Utils/UMath.cs
    startLine: 38
  assemblies:
  - Sustenet
  namespace: Sustenet.Utils.Mathematics
  summary: "\nDetermines if a number is in range of min and max (inclusive).\n"
  example: []
  syntax:
    content: public static bool InRange(this float num, float min, float max)
    parameters:
    - id: num
      type: System.Single
    - id: min
      type: System.Single
    - id: max
      type: System.Single
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function InRange(num As Single, min As Single, max As Single) As Boolean
  overload: Sustenet.Utils.Mathematics.UMath.InRange*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Sustenet.Utils.Mathematics
  commentId: N:Sustenet.Utils.Mathematics
  name: Sustenet.Utils.Mathematics
  nameWithType: Sustenet.Utils.Mathematics
  fullName: Sustenet.Utils.Mathematics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sustenet.Utils.Mathematics.UMath.InRange*
  commentId: Overload:Sustenet.Utils.Mathematics.UMath.InRange
  name: InRange
  nameWithType: UMath.InRange
  fullName: Sustenet.Utils.Mathematics.UMath.InRange
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
