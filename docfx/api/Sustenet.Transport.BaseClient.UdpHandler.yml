### YamlMime:ManagedReference
items:
- uid: Sustenet.Transport.BaseClient.UdpHandler
  commentId: T:Sustenet.Transport.BaseClient.UdpHandler
  id: BaseClient.UdpHandler
  parent: Sustenet.Transport
  children:
  - Sustenet.Transport.BaseClient.UdpHandler.Connect(Sustenet.Transport.BaseClient,System.Net.IPAddress,System.UInt16,System.UInt16)
  - Sustenet.Transport.BaseClient.UdpHandler.Dispose
  - Sustenet.Transport.BaseClient.UdpHandler.Dispose(System.Boolean)
  - Sustenet.Transport.BaseClient.UdpHandler.endpoint
  - Sustenet.Transport.BaseClient.UdpHandler.socket
  langs:
  - csharp
  - vb
  name: BaseClient.UdpHandler
  nameWithType: BaseClient.UdpHandler
  fullName: Sustenet.Transport.BaseClient.UdpHandler
  type: Class
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: UdpHandler
    path: src/Transport/BaseClient.cs
    startLine: 238
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: 'public class UdpHandler : IDisposable'
    content.vb: >-
      Public Class UdpHandler
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sustenet.Transport.BaseClient.UdpHandler.socket
  commentId: F:Sustenet.Transport.BaseClient.UdpHandler.socket
  id: socket
  parent: Sustenet.Transport.BaseClient.UdpHandler
  langs:
  - csharp
  - vb
  name: socket
  nameWithType: BaseClient.UdpHandler.socket
  fullName: Sustenet.Transport.BaseClient.UdpHandler.socket
  type: Field
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: socket
    path: src/Transport/BaseClient.cs
    startLine: 240
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public static UdpClient socket
    return:
      type: System.Net.Sockets.UdpClient
    content.vb: Public Shared socket As UdpClient
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sustenet.Transport.BaseClient.UdpHandler.endpoint
  commentId: F:Sustenet.Transport.BaseClient.UdpHandler.endpoint
  id: endpoint
  parent: Sustenet.Transport.BaseClient.UdpHandler
  langs:
  - csharp
  - vb
  name: endpoint
  nameWithType: BaseClient.UdpHandler.endpoint
  fullName: Sustenet.Transport.BaseClient.UdpHandler.endpoint
  type: Field
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: endpoint
    path: src/Transport/BaseClient.cs
    startLine: 241
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public IPEndPoint endpoint
    return:
      type: System.Net.IPEndPoint
    content.vb: Public endpoint As IPEndPoint
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sustenet.Transport.BaseClient.UdpHandler.Connect(Sustenet.Transport.BaseClient,System.Net.IPAddress,System.UInt16,System.UInt16)
  commentId: M:Sustenet.Transport.BaseClient.UdpHandler.Connect(Sustenet.Transport.BaseClient,System.Net.IPAddress,System.UInt16,System.UInt16)
  id: Connect(Sustenet.Transport.BaseClient,System.Net.IPAddress,System.UInt16,System.UInt16)
  parent: Sustenet.Transport.BaseClient.UdpHandler
  langs:
  - csharp
  - vb
  name: Connect(BaseClient, IPAddress, UInt16, UInt16)
  nameWithType: BaseClient.UdpHandler.Connect(BaseClient, IPAddress, UInt16, UInt16)
  fullName: Sustenet.Transport.BaseClient.UdpHandler.Connect(Sustenet.Transport.BaseClient, System.Net.IPAddress, System.UInt16, System.UInt16)
  type: Method
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Connect
    path: src/Transport/BaseClient.cs
    startLine: 249
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  summary: "\nPrepares a client for a UDP connection to a server.\n"
  example: []
  syntax:
    content: public void Connect(BaseClient client, IPAddress ip, ushort port, ushort localPort)
    parameters:
    - id: client
      type: Sustenet.Transport.BaseClient
    - id: ip
      type: System.Net.IPAddress
      description: The IP Address to set the endpoint to.
    - id: port
      type: System.UInt16
      description: The port to set the endpoint to.
    - id: localPort
      type: System.UInt16
      description: The local port.
    content.vb: Public Sub Connect(client As BaseClient, ip As IPAddress, port As UShort, localPort As UShort)
  overload: Sustenet.Transport.BaseClient.UdpHandler.Connect*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sustenet.Transport.BaseClient.UdpHandler.Dispose(System.Boolean)
  commentId: M:Sustenet.Transport.BaseClient.UdpHandler.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Sustenet.Transport.BaseClient.UdpHandler
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: BaseClient.UdpHandler.Dispose(Boolean)
  fullName: Sustenet.Transport.BaseClient.UdpHandler.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Dispose
    path: src/Transport/BaseClient.cs
    startLine: 296
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Sustenet.Transport.BaseClient.UdpHandler.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sustenet.Transport.BaseClient.UdpHandler.Dispose
  commentId: M:Sustenet.Transport.BaseClient.UdpHandler.Dispose
  id: Dispose
  parent: Sustenet.Transport.BaseClient.UdpHandler
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: BaseClient.UdpHandler.Dispose()
  fullName: Sustenet.Transport.BaseClient.UdpHandler.Dispose()
  type: Method
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Dispose
    path: src/Transport/BaseClient.cs
    startLine: 311
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Sustenet.Transport.BaseClient.UdpHandler.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sustenet.Transport
  commentId: N:Sustenet.Transport
  name: Sustenet.Transport
  nameWithType: Sustenet.Transport
  fullName: Sustenet.Transport
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.Sockets.UdpClient
  commentId: T:System.Net.Sockets.UdpClient
  parent: System.Net.Sockets
  isExternal: true
  name: UdpClient
  nameWithType: UdpClient
  fullName: System.Net.Sockets.UdpClient
- uid: System.Net.Sockets
  commentId: N:System.Net.Sockets
  isExternal: true
  name: System.Net.Sockets
  nameWithType: System.Net.Sockets
  fullName: System.Net.Sockets
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: Sustenet.Transport.BaseClient.UdpHandler.Connect*
  commentId: Overload:Sustenet.Transport.BaseClient.UdpHandler.Connect
  name: Connect
  nameWithType: BaseClient.UdpHandler.Connect
  fullName: Sustenet.Transport.BaseClient.UdpHandler.Connect
- uid: Sustenet.Transport.BaseClient
  commentId: T:Sustenet.Transport.BaseClient
  parent: Sustenet.Transport
  name: BaseClient
  nameWithType: BaseClient
  fullName: Sustenet.Transport.BaseClient
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Sustenet.Transport.BaseClient.UdpHandler.Dispose*
  commentId: Overload:Sustenet.Transport.BaseClient.UdpHandler.Dispose
  name: Dispose
  nameWithType: BaseClient.UdpHandler.Dispose
  fullName: Sustenet.Transport.BaseClient.UdpHandler.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
