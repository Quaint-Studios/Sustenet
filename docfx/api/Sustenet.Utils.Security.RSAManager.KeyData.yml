### YamlMime:ManagedReference
items:
- uid: Sustenet.Utils.Security.RSAManager.KeyData
  commentId: T:Sustenet.Utils.Security.RSAManager.KeyData
  id: RSAManager.KeyData
  parent: Sustenet.Utils.Security
  children:
  - Sustenet.Utils.Security.RSAManager.KeyData.#ctor(System.String,System.Security.Cryptography.RSAParameters)
  - Sustenet.Utils.Security.RSAManager.KeyData.key
  - Sustenet.Utils.Security.RSAManager.KeyData.name
  langs:
  - csharp
  - vb
  name: RSAManager.KeyData
  nameWithType: RSAManager.KeyData
  fullName: Sustenet.Utils.Security.RSAManager.KeyData
  type: Struct
  source:
    remote:
      path: src/Utils/Security/RSAManager.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: KeyData
    path: src/Utils/Security/RSAManager.cs
    startLine: 57
  assemblies:
  - Sustenet
  namespace: Sustenet.Utils.Security
  syntax:
    content: public struct KeyData
    content.vb: Public Structure KeyData
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Sustenet.Utils.Security.RSAManager.KeyData.name
  commentId: F:Sustenet.Utils.Security.RSAManager.KeyData.name
  id: name
  parent: Sustenet.Utils.Security.RSAManager.KeyData
  langs:
  - csharp
  - vb
  name: name
  nameWithType: RSAManager.KeyData.name
  fullName: Sustenet.Utils.Security.RSAManager.KeyData.name
  type: Field
  source:
    remote:
      path: src/Utils/Security/RSAManager.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: name
    path: src/Utils/Security/RSAManager.cs
    startLine: 59
  assemblies:
  - Sustenet
  namespace: Sustenet.Utils.Security
  syntax:
    content: public readonly string name
    return:
      type: System.String
    content.vb: Public ReadOnly name As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sustenet.Utils.Security.RSAManager.KeyData.key
  commentId: F:Sustenet.Utils.Security.RSAManager.KeyData.key
  id: key
  parent: Sustenet.Utils.Security.RSAManager.KeyData
  langs:
  - csharp
  - vb
  name: key
  nameWithType: RSAManager.KeyData.key
  fullName: Sustenet.Utils.Security.RSAManager.KeyData.key
  type: Field
  source:
    remote:
      path: src/Utils/Security/RSAManager.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: key
    path: src/Utils/Security/RSAManager.cs
    startLine: 60
  assemblies:
  - Sustenet
  namespace: Sustenet.Utils.Security
  syntax:
    content: public readonly RSAParameters key
    return:
      type: System.Security.Cryptography.RSAParameters
    content.vb: Public ReadOnly key As RSAParameters
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sustenet.Utils.Security.RSAManager.KeyData.#ctor(System.String,System.Security.Cryptography.RSAParameters)
  commentId: M:Sustenet.Utils.Security.RSAManager.KeyData.#ctor(System.String,System.Security.Cryptography.RSAParameters)
  id: '#ctor(System.String,System.Security.Cryptography.RSAParameters)'
  parent: Sustenet.Utils.Security.RSAManager.KeyData
  langs:
  - csharp
  - vb
  name: KeyData(String, RSAParameters)
  nameWithType: RSAManager.KeyData.KeyData(String, RSAParameters)
  fullName: Sustenet.Utils.Security.RSAManager.KeyData.KeyData(System.String, System.Security.Cryptography.RSAParameters)
  type: Constructor
  source:
    remote:
      path: src/Utils/Security/RSAManager.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: .ctor
    path: src/Utils/Security/RSAManager.cs
    startLine: 62
  assemblies:
  - Sustenet
  namespace: Sustenet.Utils.Security
  syntax:
    content: public KeyData(string _name, RSAParameters _key)
    parameters:
    - id: _name
      type: System.String
    - id: _key
      type: System.Security.Cryptography.RSAParameters
    content.vb: Public Sub New(_name As String, _key As RSAParameters)
  overload: Sustenet.Utils.Security.RSAManager.KeyData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sustenet.Utils.Security
  commentId: N:Sustenet.Utils.Security
  name: Sustenet.Utils.Security
  nameWithType: Sustenet.Utils.Security
  fullName: Sustenet.Utils.Security
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.RSAParameters
  commentId: T:System.Security.Cryptography.RSAParameters
  parent: System.Security.Cryptography
  isExternal: true
  name: RSAParameters
  nameWithType: RSAParameters
  fullName: System.Security.Cryptography.RSAParameters
- uid: System.Security.Cryptography
  commentId: N:System.Security.Cryptography
  isExternal: true
  name: System.Security.Cryptography
  nameWithType: System.Security.Cryptography
  fullName: System.Security.Cryptography
- uid: Sustenet.Utils.Security.RSAManager.KeyData.#ctor*
  commentId: Overload:Sustenet.Utils.Security.RSAManager.KeyData.#ctor
  name: KeyData
  nameWithType: RSAManager.KeyData.KeyData
  fullName: Sustenet.Utils.Security.RSAManager.KeyData.KeyData
