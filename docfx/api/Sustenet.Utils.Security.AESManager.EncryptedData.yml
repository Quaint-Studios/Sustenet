### YamlMime:ManagedReference
items:
- uid: Sustenet.Utils.Security.AESManager.EncryptedData
  commentId: T:Sustenet.Utils.Security.AESManager.EncryptedData
  id: AESManager.EncryptedData
  parent: Sustenet.Utils.Security
  children:
  - Sustenet.Utils.Security.AESManager.EncryptedData.#ctor(System.Byte[],System.Byte[])
  - Sustenet.Utils.Security.AESManager.EncryptedData.cypher
  - Sustenet.Utils.Security.AESManager.EncryptedData.iv
  langs:
  - csharp
  - vb
  name: AESManager.EncryptedData
  nameWithType: AESManager.EncryptedData
  fullName: Sustenet.Utils.Security.AESManager.EncryptedData
  type: Struct
  source:
    remote:
      path: src/Utils/Security/AESManager.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: EncryptedData
    path: src/Utils/Security/AESManager.cs
    startLine: 53
  assemblies:
  - Sustenet
  namespace: Sustenet.Utils.Security
  syntax:
    content: public struct EncryptedData
    content.vb: Public Structure EncryptedData
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Sustenet.Utils.Security.AESManager.EncryptedData.cypher
  commentId: F:Sustenet.Utils.Security.AESManager.EncryptedData.cypher
  id: cypher
  parent: Sustenet.Utils.Security.AESManager.EncryptedData
  langs:
  - csharp
  - vb
  name: cypher
  nameWithType: AESManager.EncryptedData.cypher
  fullName: Sustenet.Utils.Security.AESManager.EncryptedData.cypher
  type: Field
  source:
    remote:
      path: src/Utils/Security/AESManager.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: cypher
    path: src/Utils/Security/AESManager.cs
    startLine: 58
  assemblies:
  - Sustenet
  namespace: Sustenet.Utils.Security
  summary: "\nThe encrypted string of data as a byte array.\n"
  example: []
  syntax:
    content: public readonly byte[] cypher
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly cypher As Byte()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sustenet.Utils.Security.AESManager.EncryptedData.iv
  commentId: F:Sustenet.Utils.Security.AESManager.EncryptedData.iv
  id: iv
  parent: Sustenet.Utils.Security.AESManager.EncryptedData
  langs:
  - csharp
  - vb
  name: iv
  nameWithType: AESManager.EncryptedData.iv
  fullName: Sustenet.Utils.Security.AESManager.EncryptedData.iv
  type: Field
  source:
    remote:
      path: src/Utils/Security/AESManager.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: iv
    path: src/Utils/Security/AESManager.cs
    startLine: 62
  assemblies:
  - Sustenet
  namespace: Sustenet.Utils.Security
  summary: "\nThe IV.\n"
  example: []
  syntax:
    content: public readonly byte[] iv
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly iv As Byte()
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Sustenet.Utils.Security.AESManager.EncryptedData.#ctor(System.Byte[],System.Byte[])
  commentId: M:Sustenet.Utils.Security.AESManager.EncryptedData.#ctor(System.Byte[],System.Byte[])
  id: '#ctor(System.Byte[],System.Byte[])'
  parent: Sustenet.Utils.Security.AESManager.EncryptedData
  langs:
  - csharp
  - vb
  name: EncryptedData(Byte[], Byte[])
  nameWithType: AESManager.EncryptedData.EncryptedData(Byte[], Byte[])
  fullName: Sustenet.Utils.Security.AESManager.EncryptedData.EncryptedData(System.Byte[], System.Byte[])
  type: Constructor
  source:
    remote:
      path: src/Utils/Security/AESManager.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: .ctor
    path: src/Utils/Security/AESManager.cs
    startLine: 64
  assemblies:
  - Sustenet
  namespace: Sustenet.Utils.Security
  syntax:
    content: public EncryptedData(byte[] _cypher, byte[] _iv)
    parameters:
    - id: _cypher
      type: System.Byte[]
    - id: _iv
      type: System.Byte[]
    content.vb: Public Sub New(_cypher As Byte(), _iv As Byte())
  overload: Sustenet.Utils.Security.AESManager.EncryptedData.#ctor*
  nameWithType.vb: AESManager.EncryptedData.EncryptedData(Byte(), Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Sustenet.Utils.Security.AESManager.EncryptedData.EncryptedData(System.Byte(), System.Byte())
  name.vb: EncryptedData(Byte(), Byte())
references:
- uid: Sustenet.Utils.Security
  commentId: N:Sustenet.Utils.Security
  name: Sustenet.Utils.Security
  nameWithType: Sustenet.Utils.Security
  fullName: Sustenet.Utils.Security
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Sustenet.Utils.Security.AESManager.EncryptedData.#ctor*
  commentId: Overload:Sustenet.Utils.Security.AESManager.EncryptedData.#ctor
  name: EncryptedData
  nameWithType: AESManager.EncryptedData.EncryptedData
  fullName: Sustenet.Utils.Security.AESManager.EncryptedData.EncryptedData
