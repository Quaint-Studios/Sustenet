### YamlMime:ManagedReference
items:
- uid: Sustenet.Transport.BaseClient
  commentId: T:Sustenet.Transport.BaseClient
  id: BaseClient
  parent: Sustenet.Transport
  children:
  - Sustenet.Transport.BaseClient.#ctor(System.Int32)
  - Sustenet.Transport.BaseClient.bufferSize
  - Sustenet.Transport.BaseClient.DebugClient(System.Int32,System.String)
  - Sustenet.Transport.BaseClient.Dispose
  - Sustenet.Transport.BaseClient.Dispose(System.Boolean)
  - Sustenet.Transport.BaseClient.id
  - Sustenet.Transport.BaseClient.name
  - Sustenet.Transport.BaseClient.onConnected
  - Sustenet.Transport.BaseClient.onDisconnected
  - Sustenet.Transport.BaseClient.onReceived
  - Sustenet.Transport.BaseClient.player
  - Sustenet.Transport.BaseClient.tcp
  - Sustenet.Transport.BaseClient.udp
  langs:
  - csharp
  - vb
  name: BaseClient
  nameWithType: BaseClient
  fullName: Sustenet.Transport.BaseClient
  type: Class
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: BaseClient
    path: src/Transport/BaseClient.cs
    startLine: 31
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  summary: "\nThe core for all clients. Handles basic functionality like sending\nand receiving data. Also handles the core for connecting to servers.\n"
  example: []
  syntax:
    content: 'public class BaseClient : IDisposable'
    content.vb: >-
      Public Class BaseClient
          Implements IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - Sustenet.Clients.Client
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sustenet.Transport.BaseClient.id
  commentId: F:Sustenet.Transport.BaseClient.id
  id: id
  parent: Sustenet.Transport.BaseClient
  langs:
  - csharp
  - vb
  name: id
  nameWithType: BaseClient.id
  fullName: Sustenet.Transport.BaseClient.id
  type: Field
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: id
    path: src/Transport/BaseClient.cs
    startLine: 33
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public int id
    return:
      type: System.Int32
    content.vb: Public id As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sustenet.Transport.BaseClient.tcp
  commentId: F:Sustenet.Transport.BaseClient.tcp
  id: tcp
  parent: Sustenet.Transport.BaseClient
  langs:
  - csharp
  - vb
  name: tcp
  nameWithType: BaseClient.tcp
  fullName: Sustenet.Transport.BaseClient.tcp
  type: Field
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: tcp
    path: src/Transport/BaseClient.cs
    startLine: 34
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public BaseClient.TcpHandler tcp
    return:
      type: Sustenet.Transport.BaseClient.TcpHandler
    content.vb: Public tcp As BaseClient.TcpHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sustenet.Transport.BaseClient.udp
  commentId: F:Sustenet.Transport.BaseClient.udp
  id: udp
  parent: Sustenet.Transport.BaseClient
  langs:
  - csharp
  - vb
  name: udp
  nameWithType: BaseClient.udp
  fullName: Sustenet.Transport.BaseClient.udp
  type: Field
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: udp
    path: src/Transport/BaseClient.cs
    startLine: 35
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public BaseClient.UdpHandler udp
    return:
      type: Sustenet.Transport.BaseClient.UdpHandler
    content.vb: Public udp As BaseClient.UdpHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sustenet.Transport.BaseClient.bufferSize
  commentId: F:Sustenet.Transport.BaseClient.bufferSize
  id: bufferSize
  parent: Sustenet.Transport.BaseClient
  langs:
  - csharp
  - vb
  name: bufferSize
  nameWithType: BaseClient.bufferSize
  fullName: Sustenet.Transport.BaseClient.bufferSize
  type: Field
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: bufferSize
    path: src/Transport/BaseClient.cs
    startLine: 36
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public static int bufferSize
    return:
      type: System.Int32
    content.vb: Public Shared bufferSize As Integer
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sustenet.Transport.BaseClient.name
  commentId: F:Sustenet.Transport.BaseClient.name
  id: name
  parent: Sustenet.Transport.BaseClient
  langs:
  - csharp
  - vb
  name: name
  nameWithType: BaseClient.name
  fullName: Sustenet.Transport.BaseClient.name
  type: Field
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: name
    path: src/Transport/BaseClient.cs
    startLine: 38
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sustenet.Transport.BaseClient.onConnected
  commentId: F:Sustenet.Transport.BaseClient.onConnected
  id: onConnected
  parent: Sustenet.Transport.BaseClient
  langs:
  - csharp
  - vb
  name: onConnected
  nameWithType: BaseClient.onConnected
  fullName: Sustenet.Transport.BaseClient.onConnected
  type: Field
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: onConnected
    path: src/Transport/BaseClient.cs
    startLine: 42
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public BaseEvent onConnected
    return:
      type: Sustenet.Events.BaseEvent
    content.vb: Public onConnected As BaseEvent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sustenet.Transport.BaseClient.onDisconnected
  commentId: F:Sustenet.Transport.BaseClient.onDisconnected
  id: onDisconnected
  parent: Sustenet.Transport.BaseClient
  langs:
  - csharp
  - vb
  name: onDisconnected
  nameWithType: BaseClient.onDisconnected
  fullName: Sustenet.Transport.BaseClient.onDisconnected
  type: Field
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: onDisconnected
    path: src/Transport/BaseClient.cs
    startLine: 43
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public BaseEvent onDisconnected
    return:
      type: Sustenet.Events.BaseEvent
    content.vb: Public onDisconnected As BaseEvent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sustenet.Transport.BaseClient.onReceived
  commentId: F:Sustenet.Transport.BaseClient.onReceived
  id: onReceived
  parent: Sustenet.Transport.BaseClient
  langs:
  - csharp
  - vb
  name: onReceived
  nameWithType: BaseClient.onReceived
  fullName: Sustenet.Transport.BaseClient.onReceived
  type: Field
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: onReceived
    path: src/Transport/BaseClient.cs
    startLine: 44
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public BaseEvent<Protocols, byte[]> onReceived
    return:
      type: Sustenet.Events.BaseEvent{Sustenet.Transport.Protocols,System.Byte[]}
    content.vb: Public onReceived As BaseEvent(Of Protocols, Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sustenet.Transport.BaseClient.player
  commentId: F:Sustenet.Transport.BaseClient.player
  id: player
  parent: Sustenet.Transport.BaseClient
  langs:
  - csharp
  - vb
  name: player
  nameWithType: BaseClient.player
  fullName: Sustenet.Transport.BaseClient.player
  type: Field
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: player
    path: src/Transport/BaseClient.cs
    startLine: 46
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public Player player
    return:
      type: Sustenet.Transport.Core.Spawning.Player
    content.vb: Public player As Player
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sustenet.Transport.BaseClient.#ctor(System.Int32)
  commentId: M:Sustenet.Transport.BaseClient.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Sustenet.Transport.BaseClient
  langs:
  - csharp
  - vb
  name: BaseClient(Int32)
  nameWithType: BaseClient.BaseClient(Int32)
  fullName: Sustenet.Transport.BaseClient.BaseClient(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: .ctor
    path: src/Transport/BaseClient.cs
    startLine: 48
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public BaseClient(int _id)
    parameters:
    - id: _id
      type: System.Int32
    content.vb: Public Sub New(_id As Integer)
  overload: Sustenet.Transport.BaseClient.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sustenet.Transport.BaseClient.DebugClient(System.Int32,System.String)
  commentId: M:Sustenet.Transport.BaseClient.DebugClient(System.Int32,System.String)
  id: DebugClient(System.Int32,System.String)
  parent: Sustenet.Transport.BaseClient
  langs:
  - csharp
  - vb
  name: DebugClient(Int32, String)
  nameWithType: BaseClient.DebugClient(Int32, String)
  fullName: Sustenet.Transport.BaseClient.DebugClient(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: DebugClient
    path: src/Transport/BaseClient.cs
    startLine: 322
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public static void DebugClient(int id, string msg)
    parameters:
    - id: id
      type: System.Int32
    - id: msg
      type: System.String
    content.vb: Public Shared Sub DebugClient(id As Integer, msg As String)
  overload: Sustenet.Transport.BaseClient.DebugClient*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Sustenet.Transport.BaseClient.Dispose(System.Boolean)
  commentId: M:Sustenet.Transport.BaseClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Sustenet.Transport.BaseClient
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: BaseClient.Dispose(Boolean)
  fullName: Sustenet.Transport.BaseClient.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Dispose
    path: src/Transport/BaseClient.cs
    startLine: 329
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Sustenet.Transport.BaseClient.Dispose*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: Sustenet.Transport.BaseClient.Dispose
  commentId: M:Sustenet.Transport.BaseClient.Dispose
  id: Dispose
  parent: Sustenet.Transport.BaseClient
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: BaseClient.Dispose()
  fullName: Sustenet.Transport.BaseClient.Dispose()
  type: Method
  source:
    remote:
      path: src/Transport/BaseClient.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Dispose
    path: src/Transport/BaseClient.cs
    startLine: 349
  assemblies:
  - Sustenet
  namespace: Sustenet.Transport
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Sustenet.Transport.BaseClient.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Sustenet.Transport
  commentId: N:Sustenet.Transport
  name: Sustenet.Transport
  nameWithType: Sustenet.Transport
  fullName: Sustenet.Transport
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Sustenet.Transport.BaseClient.TcpHandler
  commentId: T:Sustenet.Transport.BaseClient.TcpHandler
  parent: Sustenet.Transport
  name: BaseClient.TcpHandler
  nameWithType: BaseClient.TcpHandler
  fullName: Sustenet.Transport.BaseClient.TcpHandler
- uid: Sustenet.Transport.BaseClient.UdpHandler
  commentId: T:Sustenet.Transport.BaseClient.UdpHandler
  parent: Sustenet.Transport
  name: BaseClient.UdpHandler
  nameWithType: BaseClient.UdpHandler
  fullName: Sustenet.Transport.BaseClient.UdpHandler
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Sustenet.Events.BaseEvent
  commentId: T:Sustenet.Events.BaseEvent
  parent: Sustenet.Events
  name: BaseEvent
  nameWithType: BaseEvent
  fullName: Sustenet.Events.BaseEvent
- uid: Sustenet.Events
  commentId: N:Sustenet.Events
  name: Sustenet.Events
  nameWithType: Sustenet.Events
  fullName: Sustenet.Events
- uid: Sustenet.Events.BaseEvent{Sustenet.Transport.Protocols,System.Byte[]}
  commentId: T:Sustenet.Events.BaseEvent{Sustenet.Transport.Protocols,System.Byte[]}
  parent: Sustenet.Events
  definition: Sustenet.Events.BaseEvent`2
  name: BaseEvent<Protocols, Byte[]>
  nameWithType: BaseEvent<Protocols, Byte[]>
  fullName: Sustenet.Events.BaseEvent<Sustenet.Transport.Protocols, System.Byte[]>
  nameWithType.vb: BaseEvent(Of Protocols, Byte())
  fullName.vb: Sustenet.Events.BaseEvent(Of Sustenet.Transport.Protocols, System.Byte())
  name.vb: BaseEvent(Of Protocols, Byte())
  spec.csharp:
  - uid: Sustenet.Events.BaseEvent`2
    name: BaseEvent
    nameWithType: BaseEvent
    fullName: Sustenet.Events.BaseEvent
  - name: <
    nameWithType: <
    fullName: <
  - uid: Sustenet.Transport.Protocols
    name: Protocols
    nameWithType: Protocols
    fullName: Sustenet.Transport.Protocols
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sustenet.Events.BaseEvent`2
    name: BaseEvent
    nameWithType: BaseEvent
    fullName: Sustenet.Events.BaseEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Sustenet.Transport.Protocols
    name: Protocols
    nameWithType: Protocols
    fullName: Sustenet.Transport.Protocols
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Sustenet.Events.BaseEvent`2
  commentId: T:Sustenet.Events.BaseEvent`2
  name: BaseEvent<T1, T2>
  nameWithType: BaseEvent<T1, T2>
  fullName: Sustenet.Events.BaseEvent<T1, T2>
  nameWithType.vb: BaseEvent(Of T1, T2)
  fullName.vb: Sustenet.Events.BaseEvent(Of T1, T2)
  name.vb: BaseEvent(Of T1, T2)
  spec.csharp:
  - uid: Sustenet.Events.BaseEvent`2
    name: BaseEvent
    nameWithType: BaseEvent
    fullName: Sustenet.Events.BaseEvent
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Sustenet.Events.BaseEvent`2
    name: BaseEvent
    nameWithType: BaseEvent
    fullName: Sustenet.Events.BaseEvent
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: Sustenet.Transport.Core.Spawning.Player
  commentId: T:Sustenet.Transport.Core.Spawning.Player
  parent: Sustenet.Transport.Core.Spawning
  name: Player
  nameWithType: Player
  fullName: Sustenet.Transport.Core.Spawning.Player
- uid: Sustenet.Transport.Core.Spawning
  commentId: N:Sustenet.Transport.Core.Spawning
  name: Sustenet.Transport.Core.Spawning
  nameWithType: Sustenet.Transport.Core.Spawning
  fullName: Sustenet.Transport.Core.Spawning
- uid: Sustenet.Transport.BaseClient.#ctor*
  commentId: Overload:Sustenet.Transport.BaseClient.#ctor
  name: BaseClient
  nameWithType: BaseClient.BaseClient
  fullName: Sustenet.Transport.BaseClient.BaseClient
- uid: Sustenet.Transport.BaseClient.DebugClient*
  commentId: Overload:Sustenet.Transport.BaseClient.DebugClient
  name: DebugClient
  nameWithType: BaseClient.DebugClient
  fullName: Sustenet.Transport.BaseClient.DebugClient
- uid: Sustenet.Transport.BaseClient.Dispose*
  commentId: Overload:Sustenet.Transport.BaseClient.Dispose
  name: Dispose
  nameWithType: BaseClient.Dispose
  fullName: Sustenet.Transport.BaseClient.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
