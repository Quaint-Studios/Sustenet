### YamlMime:ManagedReference
items:
- uid: NDesk.Options.Option
  commentId: T:NDesk.Options.Option
  id: Option
  parent: NDesk.Options
  children:
  - NDesk.Options.Option.#ctor(System.String,System.String)
  - NDesk.Options.Option.#ctor(System.String,System.String,System.Int32)
  - NDesk.Options.Option.Description
  - NDesk.Options.Option.GetNames
  - NDesk.Options.Option.GetValueSeparators
  - NDesk.Options.Option.Invoke(NDesk.Options.OptionContext)
  - NDesk.Options.Option.MaxValueCount
  - NDesk.Options.Option.OnParseComplete(NDesk.Options.OptionContext)
  - NDesk.Options.Option.OptionValueType
  - NDesk.Options.Option.Parse``1(System.String,NDesk.Options.OptionContext)
  - NDesk.Options.Option.Prototype
  - NDesk.Options.Option.ToString
  langs:
  - csharp
  - vb
  name: Option
  nameWithType: Option
  fullName: NDesk.Options.Option
  type: Class
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Option
    path: libs/NDesk/Options.cs
    startLine: 280
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public abstract class Option
    content.vb: Public MustInherit Class Option
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: NDesk.Options.Option.#ctor(System.String,System.String)
  commentId: M:NDesk.Options.Option.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: NDesk.Options.Option
  langs:
  - csharp
  - vb
  name: Option(String, String)
  nameWithType: Option.Option(String, String)
  fullName: NDesk.Options.Option.Option(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: .ctor
    path: libs/NDesk/Options.cs
    startLine: 287
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: protected Option(string prototype, string description)
    parameters:
    - id: prototype
      type: System.String
    - id: description
      type: System.String
    content.vb: Protected Sub New(prototype As String, description As String)
  overload: NDesk.Options.Option.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: NDesk.Options.Option.#ctor(System.String,System.String,System.Int32)
  commentId: M:NDesk.Options.Option.#ctor(System.String,System.String,System.Int32)
  id: '#ctor(System.String,System.String,System.Int32)'
  parent: NDesk.Options.Option
  langs:
  - csharp
  - vb
  name: Option(String, String, Int32)
  nameWithType: Option.Option(String, String, Int32)
  fullName: NDesk.Options.Option.Option(System.String, System.String, System.Int32)
  type: Constructor
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: .ctor
    path: libs/NDesk/Options.cs
    startLine: 292
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: protected Option(string prototype, string description, int maxValueCount)
    parameters:
    - id: prototype
      type: System.String
    - id: description
      type: System.String
    - id: maxValueCount
      type: System.Int32
    content.vb: Protected Sub New(prototype As String, description As String, maxValueCount As Integer)
  overload: NDesk.Options.Option.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: NDesk.Options.Option.Prototype
  commentId: P:NDesk.Options.Option.Prototype
  id: Prototype
  parent: NDesk.Options.Option
  langs:
  - csharp
  - vb
  name: Prototype
  nameWithType: Option.Prototype
  fullName: NDesk.Options.Option.Prototype
  type: Property
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Prototype
    path: libs/NDesk/Options.cs
    startLine: 324
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public string Prototype { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Prototype As String
  overload: NDesk.Options.Option.Prototype*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NDesk.Options.Option.Description
  commentId: P:NDesk.Options.Option.Description
  id: Description
  parent: NDesk.Options.Option
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Option.Description
  fullName: NDesk.Options.Option.Description
  type: Property
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Description
    path: libs/NDesk/Options.cs
    startLine: 325
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public string Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Description As String
  overload: NDesk.Options.Option.Description*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NDesk.Options.Option.OptionValueType
  commentId: P:NDesk.Options.Option.OptionValueType
  id: OptionValueType
  parent: NDesk.Options.Option
  langs:
  - csharp
  - vb
  name: OptionValueType
  nameWithType: Option.OptionValueType
  fullName: NDesk.Options.Option.OptionValueType
  type: Property
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: OptionValueType
    path: libs/NDesk/Options.cs
    startLine: 326
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionValueType OptionValueType { get; }
    parameters: []
    return:
      type: NDesk.Options.OptionValueType
    content.vb: Public ReadOnly Property OptionValueType As OptionValueType
  overload: NDesk.Options.Option.OptionValueType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NDesk.Options.Option.MaxValueCount
  commentId: P:NDesk.Options.Option.MaxValueCount
  id: MaxValueCount
  parent: NDesk.Options.Option
  langs:
  - csharp
  - vb
  name: MaxValueCount
  nameWithType: Option.MaxValueCount
  fullName: NDesk.Options.Option.MaxValueCount
  type: Property
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: MaxValueCount
    path: libs/NDesk/Options.cs
    startLine: 327
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public int MaxValueCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxValueCount As Integer
  overload: NDesk.Options.Option.MaxValueCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NDesk.Options.Option.GetNames
  commentId: M:NDesk.Options.Option.GetNames
  id: GetNames
  parent: NDesk.Options.Option
  langs:
  - csharp
  - vb
  name: GetNames()
  nameWithType: Option.GetNames()
  fullName: NDesk.Options.Option.GetNames()
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: GetNames
    path: libs/NDesk/Options.cs
    startLine: 329
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public string[] GetNames()
    return:
      type: System.String[]
    content.vb: Public Function GetNames As String()
  overload: NDesk.Options.Option.GetNames*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NDesk.Options.Option.GetValueSeparators
  commentId: M:NDesk.Options.Option.GetValueSeparators
  id: GetValueSeparators
  parent: NDesk.Options.Option
  langs:
  - csharp
  - vb
  name: GetValueSeparators()
  nameWithType: Option.GetValueSeparators()
  fullName: NDesk.Options.Option.GetValueSeparators()
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: GetValueSeparators
    path: libs/NDesk/Options.cs
    startLine: 334
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public string[] GetValueSeparators()
    return:
      type: System.String[]
    content.vb: Public Function GetValueSeparators As String()
  overload: NDesk.Options.Option.GetValueSeparators*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NDesk.Options.Option.Parse``1(System.String,NDesk.Options.OptionContext)
  commentId: M:NDesk.Options.Option.Parse``1(System.String,NDesk.Options.OptionContext)
  id: Parse``1(System.String,NDesk.Options.OptionContext)
  parent: NDesk.Options.Option
  langs:
  - csharp
  - vb
  name: Parse<T>(String, OptionContext)
  nameWithType: Option.Parse<T>(String, OptionContext)
  fullName: NDesk.Options.Option.Parse<T>(System.String, NDesk.Options.OptionContext)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Parse
    path: libs/NDesk/Options.cs
    startLine: 341
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: protected static T Parse<T>(string value, OptionContext c)
    parameters:
    - id: value
      type: System.String
    - id: c
      type: NDesk.Options.OptionContext
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Protected Shared Function Parse(Of T)(value As String, c As OptionContext) As T
  overload: NDesk.Options.Option.Parse*
  nameWithType.vb: Option.Parse(Of T)(String, OptionContext)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: NDesk.Options.Option.Parse(Of T)(System.String, NDesk.Options.OptionContext)
  name.vb: Parse(Of T)(String, OptionContext)
- uid: NDesk.Options.Option.Invoke(NDesk.Options.OptionContext)
  commentId: M:NDesk.Options.Option.Invoke(NDesk.Options.OptionContext)
  id: Invoke(NDesk.Options.OptionContext)
  parent: NDesk.Options.Option
  langs:
  - csharp
  - vb
  name: Invoke(OptionContext)
  nameWithType: Option.Invoke(OptionContext)
  fullName: NDesk.Options.Option.Invoke(NDesk.Options.OptionContext)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Invoke
    path: libs/NDesk/Options.cs
    startLine: 437
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public void Invoke(OptionContext c)
    parameters:
    - id: c
      type: NDesk.Options.OptionContext
    content.vb: Public Sub Invoke(c As OptionContext)
  overload: NDesk.Options.Option.Invoke*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NDesk.Options.Option.OnParseComplete(NDesk.Options.OptionContext)
  commentId: M:NDesk.Options.Option.OnParseComplete(NDesk.Options.OptionContext)
  id: OnParseComplete(NDesk.Options.OptionContext)
  parent: NDesk.Options.Option
  langs:
  - csharp
  - vb
  name: OnParseComplete(OptionContext)
  nameWithType: Option.OnParseComplete(OptionContext)
  fullName: NDesk.Options.Option.OnParseComplete(NDesk.Options.OptionContext)
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: OnParseComplete
    path: libs/NDesk/Options.cs
    startLine: 445
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: protected abstract void OnParseComplete(OptionContext c)
    parameters:
    - id: c
      type: NDesk.Options.OptionContext
    content.vb: Protected MustOverride Sub OnParseComplete(c As OptionContext)
  overload: NDesk.Options.Option.OnParseComplete*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: NDesk.Options.Option.ToString
  commentId: M:NDesk.Options.Option.ToString
  id: ToString
  parent: NDesk.Options.Option
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Option.ToString()
  fullName: NDesk.Options.Option.ToString()
  type: Method
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: ToString
    path: libs/NDesk/Options.cs
    startLine: 447
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: NDesk.Options.Option.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: NDesk.Options
  commentId: N:NDesk.Options
  name: NDesk.Options
  nameWithType: NDesk.Options
  fullName: NDesk.Options
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NDesk.Options.Option.#ctor*
  commentId: Overload:NDesk.Options.Option.#ctor
  name: Option
  nameWithType: Option.Option
  fullName: NDesk.Options.Option.Option
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NDesk.Options.Option.Prototype*
  commentId: Overload:NDesk.Options.Option.Prototype
  name: Prototype
  nameWithType: Option.Prototype
  fullName: NDesk.Options.Option.Prototype
- uid: NDesk.Options.Option.Description*
  commentId: Overload:NDesk.Options.Option.Description
  name: Description
  nameWithType: Option.Description
  fullName: NDesk.Options.Option.Description
- uid: NDesk.Options.Option.OptionValueType*
  commentId: Overload:NDesk.Options.Option.OptionValueType
  name: OptionValueType
  nameWithType: Option.OptionValueType
  fullName: NDesk.Options.Option.OptionValueType
- uid: NDesk.Options.OptionValueType
  commentId: T:NDesk.Options.OptionValueType
  parent: NDesk.Options
  name: OptionValueType
  nameWithType: OptionValueType
  fullName: NDesk.Options.OptionValueType
- uid: NDesk.Options.Option.MaxValueCount*
  commentId: Overload:NDesk.Options.Option.MaxValueCount
  name: MaxValueCount
  nameWithType: Option.MaxValueCount
  fullName: NDesk.Options.Option.MaxValueCount
- uid: NDesk.Options.Option.GetNames*
  commentId: Overload:NDesk.Options.Option.GetNames
  name: GetNames
  nameWithType: Option.GetNames
  fullName: NDesk.Options.Option.GetNames
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: NDesk.Options.Option.GetValueSeparators*
  commentId: Overload:NDesk.Options.Option.GetValueSeparators
  name: GetValueSeparators
  nameWithType: Option.GetValueSeparators
  fullName: NDesk.Options.Option.GetValueSeparators
- uid: NDesk.Options.Option.Parse*
  commentId: Overload:NDesk.Options.Option.Parse
  name: Parse
  nameWithType: Option.Parse
  fullName: NDesk.Options.Option.Parse
- uid: NDesk.Options.OptionContext
  commentId: T:NDesk.Options.OptionContext
  parent: NDesk.Options
  name: OptionContext
  nameWithType: OptionContext
  fullName: NDesk.Options.OptionContext
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: NDesk.Options.Option.Invoke*
  commentId: Overload:NDesk.Options.Option.Invoke
  name: Invoke
  nameWithType: Option.Invoke
  fullName: NDesk.Options.Option.Invoke
- uid: NDesk.Options.Option.OnParseComplete*
  commentId: Overload:NDesk.Options.Option.OnParseComplete
  name: OnParseComplete
  nameWithType: Option.OnParseComplete
  fullName: NDesk.Options.Option.OnParseComplete
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: NDesk.Options.Option.ToString*
  commentId: Overload:NDesk.Options.Option.ToString
  name: ToString
  nameWithType: Option.ToString
  fullName: NDesk.Options.Option.ToString
