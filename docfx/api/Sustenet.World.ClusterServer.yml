### YamlMime:ManagedReference
items:
- uid: Sustenet.World.ClusterServer
  commentId: T:Sustenet.World.ClusterServer
  id: ClusterServer
  parent: Sustenet.World
  children:
  - Sustenet.World.ClusterServer.#ctor(System.Int32,System.UInt16)
  - Sustenet.World.ClusterServer.InitializeData
  - Sustenet.World.ClusterServer.masterConn
  langs:
  - csharp
  - vb
  name: ClusterServer
  nameWithType: ClusterServer
  fullName: Sustenet.World.ClusterServer
  type: Class
  source:
    remote:
      path: src/World/ClusterServer.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: ClusterServer
    path: src/World/ClusterServer.cs
    startLine: 28
  assemblies:
  - Sustenet
  namespace: Sustenet.World
  summary: "\nA regionally hosted server that controls and allocates users to\nsmaller fragmented servers.\n"
  example: []
  syntax:
    content: 'public class ClusterServer : BaseServer'
    content.vb: >-
      Public Class ClusterServer
          Inherits BaseServer
  inheritance:
  - System.Object
  - Sustenet.Transport.BaseServer
  inheritedMembers:
  - Sustenet.Transport.BaseServer.serverType
  - Sustenet.Transport.BaseServer.serverTypeName
  - Sustenet.Transport.BaseServer.maxConnections
  - Sustenet.Transport.BaseServer.port
  - Sustenet.Transport.BaseServer.clients
  - Sustenet.Transport.BaseServer.releasedIds
  - Sustenet.Transport.BaseServer.packetHandlers
  - Sustenet.Transport.BaseServer.onConnection
  - Sustenet.Transport.BaseServer.onDisconnection
  - Sustenet.Transport.BaseServer.onReceived
  - Sustenet.Transport.BaseServer.Start(Sustenet.Transport.BaseServer.ServerType)
  - Sustenet.Transport.BaseServer.DebugServer(System.String,System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Sustenet.World.ClusterServer.masterConn
  commentId: F:Sustenet.World.ClusterServer.masterConn
  id: masterConn
  parent: Sustenet.World.ClusterServer
  langs:
  - csharp
  - vb
  name: masterConn
  nameWithType: ClusterServer.masterConn
  fullName: Sustenet.World.ClusterServer.masterConn
  type: Field
  source:
    remote:
      path: src/World/ClusterServer.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: masterConn
    path: src/World/ClusterServer.cs
    startLine: 30
  assemblies:
  - Sustenet
  namespace: Sustenet.World
  syntax:
    content: public ClusterClient masterConn
    return:
      type: Sustenet.Clients.ClusterClient
    content.vb: Public masterConn As ClusterClient
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sustenet.World.ClusterServer.#ctor(System.Int32,System.UInt16)
  commentId: M:Sustenet.World.ClusterServer.#ctor(System.Int32,System.UInt16)
  id: '#ctor(System.Int32,System.UInt16)'
  parent: Sustenet.World.ClusterServer
  langs:
  - csharp
  - vb
  name: ClusterServer(Int32, UInt16)
  nameWithType: ClusterServer.ClusterServer(Int32, UInt16)
  fullName: Sustenet.World.ClusterServer.ClusterServer(System.Int32, System.UInt16)
  type: Constructor
  source:
    remote:
      path: src/World/ClusterServer.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: .ctor
    path: src/World/ClusterServer.cs
    startLine: 36
  assemblies:
  - Sustenet
  namespace: Sustenet.World
  summary: "\nCreates a Cluster Server that creates Fragment Servers to be used.\nTODO: Will currently only create a single server for itself.\n"
  example: []
  syntax:
    content: public ClusterServer(int _maxConnections = 0, ushort _port = 6257)
    parameters:
    - id: _maxConnections
      type: System.Int32
    - id: _port
      type: System.UInt16
    content.vb: Public Sub New(_maxConnections As Integer = 0, _port As UShort = 6257)
  overload: Sustenet.World.ClusterServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Sustenet.World.ClusterServer.InitializeData
  commentId: M:Sustenet.World.ClusterServer.InitializeData
  id: InitializeData
  parent: Sustenet.World.ClusterServer
  langs:
  - csharp
  - vb
  name: InitializeData()
  nameWithType: ClusterServer.InitializeData()
  fullName: Sustenet.World.ClusterServer.InitializeData()
  type: Method
  source:
    remote:
      path: src/World/ClusterServer.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: InitializeData
    path: src/World/ClusterServer.cs
    startLine: 45
  assemblies:
  - Sustenet
  namespace: Sustenet.World
  syntax:
    content: protected virtual void InitializeData()
    content.vb: Protected Overridable Sub InitializeData
  overload: Sustenet.World.ClusterServer.InitializeData*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Sustenet.World
  commentId: N:Sustenet.World
  name: Sustenet.World
  nameWithType: Sustenet.World
  fullName: Sustenet.World
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Sustenet.Transport.BaseServer
  commentId: T:Sustenet.Transport.BaseServer
  parent: Sustenet.Transport
  name: BaseServer
  nameWithType: BaseServer
  fullName: Sustenet.Transport.BaseServer
- uid: Sustenet.Transport.BaseServer.serverType
  commentId: F:Sustenet.Transport.BaseServer.serverType
  parent: Sustenet.Transport.BaseServer
  name: serverType
  nameWithType: BaseServer.serverType
  fullName: Sustenet.Transport.BaseServer.serverType
- uid: Sustenet.Transport.BaseServer.serverTypeName
  commentId: F:Sustenet.Transport.BaseServer.serverTypeName
  parent: Sustenet.Transport.BaseServer
  name: serverTypeName
  nameWithType: BaseServer.serverTypeName
  fullName: Sustenet.Transport.BaseServer.serverTypeName
- uid: Sustenet.Transport.BaseServer.maxConnections
  commentId: F:Sustenet.Transport.BaseServer.maxConnections
  parent: Sustenet.Transport.BaseServer
  name: maxConnections
  nameWithType: BaseServer.maxConnections
  fullName: Sustenet.Transport.BaseServer.maxConnections
- uid: Sustenet.Transport.BaseServer.port
  commentId: F:Sustenet.Transport.BaseServer.port
  parent: Sustenet.Transport.BaseServer
  name: port
  nameWithType: BaseServer.port
  fullName: Sustenet.Transport.BaseServer.port
- uid: Sustenet.Transport.BaseServer.clients
  commentId: F:Sustenet.Transport.BaseServer.clients
  parent: Sustenet.Transport.BaseServer
  name: clients
  nameWithType: BaseServer.clients
  fullName: Sustenet.Transport.BaseServer.clients
- uid: Sustenet.Transport.BaseServer.releasedIds
  commentId: F:Sustenet.Transport.BaseServer.releasedIds
  parent: Sustenet.Transport.BaseServer
  name: releasedIds
  nameWithType: BaseServer.releasedIds
  fullName: Sustenet.Transport.BaseServer.releasedIds
- uid: Sustenet.Transport.BaseServer.packetHandlers
  commentId: F:Sustenet.Transport.BaseServer.packetHandlers
  parent: Sustenet.Transport.BaseServer
  name: packetHandlers
  nameWithType: BaseServer.packetHandlers
  fullName: Sustenet.Transport.BaseServer.packetHandlers
- uid: Sustenet.Transport.BaseServer.onConnection
  commentId: F:Sustenet.Transport.BaseServer.onConnection
  parent: Sustenet.Transport.BaseServer
  name: onConnection
  nameWithType: BaseServer.onConnection
  fullName: Sustenet.Transport.BaseServer.onConnection
- uid: Sustenet.Transport.BaseServer.onDisconnection
  commentId: F:Sustenet.Transport.BaseServer.onDisconnection
  parent: Sustenet.Transport.BaseServer
  name: onDisconnection
  nameWithType: BaseServer.onDisconnection
  fullName: Sustenet.Transport.BaseServer.onDisconnection
- uid: Sustenet.Transport.BaseServer.onReceived
  commentId: F:Sustenet.Transport.BaseServer.onReceived
  parent: Sustenet.Transport.BaseServer
  name: onReceived
  nameWithType: BaseServer.onReceived
  fullName: Sustenet.Transport.BaseServer.onReceived
- uid: Sustenet.Transport.BaseServer.Start(Sustenet.Transport.BaseServer.ServerType)
  commentId: M:Sustenet.Transport.BaseServer.Start(Sustenet.Transport.BaseServer.ServerType)
  parent: Sustenet.Transport.BaseServer
  name: Start(BaseServer.ServerType)
  nameWithType: BaseServer.Start(BaseServer.ServerType)
  fullName: Sustenet.Transport.BaseServer.Start(Sustenet.Transport.BaseServer.ServerType)
  spec.csharp:
  - uid: Sustenet.Transport.BaseServer.Start(Sustenet.Transport.BaseServer.ServerType)
    name: Start
    nameWithType: BaseServer.Start
    fullName: Sustenet.Transport.BaseServer.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sustenet.Transport.BaseServer.ServerType
    name: BaseServer.ServerType
    nameWithType: BaseServer.ServerType
    fullName: Sustenet.Transport.BaseServer.ServerType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sustenet.Transport.BaseServer.Start(Sustenet.Transport.BaseServer.ServerType)
    name: Start
    nameWithType: BaseServer.Start
    fullName: Sustenet.Transport.BaseServer.Start
  - name: (
    nameWithType: (
    fullName: (
  - uid: Sustenet.Transport.BaseServer.ServerType
    name: BaseServer.ServerType
    nameWithType: BaseServer.ServerType
    fullName: Sustenet.Transport.BaseServer.ServerType
  - name: )
    nameWithType: )
    fullName: )
- uid: Sustenet.Transport.BaseServer.DebugServer(System.String,System.String)
  commentId: M:Sustenet.Transport.BaseServer.DebugServer(System.String,System.String)
  parent: Sustenet.Transport.BaseServer
  isExternal: true
  name: DebugServer(String, String)
  nameWithType: BaseServer.DebugServer(String, String)
  fullName: Sustenet.Transport.BaseServer.DebugServer(System.String, System.String)
  spec.csharp:
  - uid: Sustenet.Transport.BaseServer.DebugServer(System.String,System.String)
    name: DebugServer
    nameWithType: BaseServer.DebugServer
    fullName: Sustenet.Transport.BaseServer.DebugServer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Sustenet.Transport.BaseServer.DebugServer(System.String,System.String)
    name: DebugServer
    nameWithType: BaseServer.DebugServer
    fullName: Sustenet.Transport.BaseServer.DebugServer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Sustenet.Transport
  commentId: N:Sustenet.Transport
  name: Sustenet.Transport
  nameWithType: Sustenet.Transport
  fullName: Sustenet.Transport
- uid: Sustenet.Clients.ClusterClient
  commentId: T:Sustenet.Clients.ClusterClient
  parent: Sustenet.Clients
  name: ClusterClient
  nameWithType: ClusterClient
  fullName: Sustenet.Clients.ClusterClient
- uid: Sustenet.Clients
  commentId: N:Sustenet.Clients
  name: Sustenet.Clients
  nameWithType: Sustenet.Clients
  fullName: Sustenet.Clients
- uid: Sustenet.World.ClusterServer.#ctor*
  commentId: Overload:Sustenet.World.ClusterServer.#ctor
  name: ClusterServer
  nameWithType: ClusterServer.ClusterServer
  fullName: Sustenet.World.ClusterServer.ClusterServer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Sustenet.World.ClusterServer.InitializeData*
  commentId: Overload:Sustenet.World.ClusterServer.InitializeData
  name: InitializeData
  nameWithType: ClusterServer.InitializeData
  fullName: Sustenet.World.ClusterServer.InitializeData
