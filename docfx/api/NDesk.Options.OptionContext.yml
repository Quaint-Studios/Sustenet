### YamlMime:ManagedReference
items:
- uid: NDesk.Options.OptionContext
  commentId: T:NDesk.Options.OptionContext
  id: OptionContext
  parent: NDesk.Options
  children:
  - NDesk.Options.OptionContext.#ctor(NDesk.Options.OptionSet)
  - NDesk.Options.OptionContext.Option
  - NDesk.Options.OptionContext.OptionIndex
  - NDesk.Options.OptionContext.OptionName
  - NDesk.Options.OptionContext.OptionSet
  - NDesk.Options.OptionContext.OptionValues
  langs:
  - csharp
  - vb
  name: OptionContext
  nameWithType: OptionContext
  fullName: NDesk.Options.OptionContext
  type: Class
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: OptionContext
    path: libs/NDesk/Options.cs
    startLine: 237
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public class OptionContext
    content.vb: Public Class OptionContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NDesk.Options.OptionContext.#ctor(NDesk.Options.OptionSet)
  commentId: M:NDesk.Options.OptionContext.#ctor(NDesk.Options.OptionSet)
  id: '#ctor(NDesk.Options.OptionSet)'
  parent: NDesk.Options.OptionContext
  langs:
  - csharp
  - vb
  name: OptionContext(OptionSet)
  nameWithType: OptionContext.OptionContext(OptionSet)
  fullName: NDesk.Options.OptionContext.OptionContext(NDesk.Options.OptionSet)
  type: Constructor
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: .ctor
    path: libs/NDesk/Options.cs
    startLine: 244
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionContext(OptionSet set)
    parameters:
    - id: set
      type: NDesk.Options.OptionSet
    content.vb: Public Sub New(set As OptionSet)
  overload: NDesk.Options.OptionContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NDesk.Options.OptionContext.Option
  commentId: P:NDesk.Options.OptionContext.Option
  id: Option
  parent: NDesk.Options.OptionContext
  langs:
  - csharp
  - vb
  name: Option
  nameWithType: OptionContext.Option
  fullName: NDesk.Options.OptionContext.Option
  type: Property
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: Option
    path: libs/NDesk/Options.cs
    startLine: 250
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public Option Option { get; set; }
    parameters: []
    return:
      type: NDesk.Options.Option
    content.vb: 'Public Property Option As '
  overload: NDesk.Options.OptionContext.Option*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NDesk.Options.OptionContext.OptionName
  commentId: P:NDesk.Options.OptionContext.OptionName
  id: OptionName
  parent: NDesk.Options.OptionContext
  langs:
  - csharp
  - vb
  name: OptionName
  nameWithType: OptionContext.OptionName
  fullName: NDesk.Options.OptionContext.OptionName
  type: Property
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: OptionName
    path: libs/NDesk/Options.cs
    startLine: 255
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public string OptionName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OptionName As String
  overload: NDesk.Options.OptionContext.OptionName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NDesk.Options.OptionContext.OptionIndex
  commentId: P:NDesk.Options.OptionContext.OptionIndex
  id: OptionIndex
  parent: NDesk.Options.OptionContext
  langs:
  - csharp
  - vb
  name: OptionIndex
  nameWithType: OptionContext.OptionIndex
  fullName: NDesk.Options.OptionContext.OptionIndex
  type: Property
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: OptionIndex
    path: libs/NDesk/Options.cs
    startLine: 260
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public int OptionIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property OptionIndex As Integer
  overload: NDesk.Options.OptionContext.OptionIndex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NDesk.Options.OptionContext.OptionSet
  commentId: P:NDesk.Options.OptionContext.OptionSet
  id: OptionSet
  parent: NDesk.Options.OptionContext
  langs:
  - csharp
  - vb
  name: OptionSet
  nameWithType: OptionContext.OptionSet
  fullName: NDesk.Options.OptionContext.OptionSet
  type: Property
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: OptionSet
    path: libs/NDesk/Options.cs
    startLine: 265
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionSet OptionSet { get; }
    parameters: []
    return:
      type: NDesk.Options.OptionSet
    content.vb: Public ReadOnly Property OptionSet As OptionSet
  overload: NDesk.Options.OptionContext.OptionSet*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NDesk.Options.OptionContext.OptionValues
  commentId: P:NDesk.Options.OptionContext.OptionValues
  id: OptionValues
  parent: NDesk.Options.OptionContext
  langs:
  - csharp
  - vb
  name: OptionValues
  nameWithType: OptionContext.OptionValues
  fullName: NDesk.Options.OptionContext.OptionValues
  type: Property
  source:
    remote:
      path: libs/NDesk/Options.cs
      branch: production-prep
      repo: git@github.com:Quaint-Studios/Sustenet.git
    id: OptionValues
    path: libs/NDesk/Options.cs
    startLine: 269
  assemblies:
  - Sustenet
  namespace: NDesk.Options
  syntax:
    content: public OptionValueCollection OptionValues { get; }
    parameters: []
    return:
      type: NDesk.Options.OptionValueCollection
    content.vb: Public ReadOnly Property OptionValues As OptionValueCollection
  overload: NDesk.Options.OptionContext.OptionValues*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: NDesk.Options
  commentId: N:NDesk.Options
  name: NDesk.Options
  nameWithType: NDesk.Options
  fullName: NDesk.Options
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: NDesk.Options.OptionContext.#ctor*
  commentId: Overload:NDesk.Options.OptionContext.#ctor
  name: OptionContext
  nameWithType: OptionContext.OptionContext
  fullName: NDesk.Options.OptionContext.OptionContext
- uid: NDesk.Options.OptionSet
  commentId: T:NDesk.Options.OptionSet
  parent: NDesk.Options
  name: OptionSet
  nameWithType: OptionSet
  fullName: NDesk.Options.OptionSet
- uid: NDesk.Options.OptionContext.Option*
  commentId: Overload:NDesk.Options.OptionContext.Option
  name: Option
  nameWithType: OptionContext.Option
  fullName: NDesk.Options.OptionContext.Option
- uid: NDesk.Options.Option
  commentId: T:NDesk.Options.Option
  parent: NDesk.Options
  name: Option
  nameWithType: Option
  fullName: NDesk.Options.Option
- uid: NDesk.Options.OptionContext.OptionName*
  commentId: Overload:NDesk.Options.OptionContext.OptionName
  name: OptionName
  nameWithType: OptionContext.OptionName
  fullName: NDesk.Options.OptionContext.OptionName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: NDesk.Options.OptionContext.OptionIndex*
  commentId: Overload:NDesk.Options.OptionContext.OptionIndex
  name: OptionIndex
  nameWithType: OptionContext.OptionIndex
  fullName: NDesk.Options.OptionContext.OptionIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: NDesk.Options.OptionContext.OptionSet*
  commentId: Overload:NDesk.Options.OptionContext.OptionSet
  name: OptionSet
  nameWithType: OptionContext.OptionSet
  fullName: NDesk.Options.OptionContext.OptionSet
- uid: NDesk.Options.OptionContext.OptionValues*
  commentId: Overload:NDesk.Options.OptionContext.OptionValues
  name: OptionValues
  nameWithType: OptionContext.OptionValues
  fullName: NDesk.Options.OptionContext.OptionValues
- uid: NDesk.Options.OptionValueCollection
  commentId: T:NDesk.Options.OptionValueCollection
  parent: NDesk.Options
  name: OptionValueCollection
  nameWithType: OptionValueCollection
  fullName: NDesk.Options.OptionValueCollection
